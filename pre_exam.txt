Wed Jan 17 12:43:18 PM CET 2024
+ hostname
fedora
+ ansible-playbook infra.yaml --diff

PLAY [Gather facts] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-3]

PLAY [Initial setup] ***********************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-3]
ok: [AlessandroTambellini-2]

TASK [init : Install required packages and set caching time] *******************
The following additional packages will be installed:
  libio-pty-perl libipc-run-perl librsync2 libtime-duration-perl
  libtimedate-perl moreutils prometheus-node-exporter-collectors
  python3-bcrypt python3-fasteners python3-future python3-lockfile
  python3-monotonic python3-paramiko smartmontools
Suggested packages:
  python3-boto ncftp lftp tahoe-lafs python3-swiftclient python3-pip par2
  python-future-doc python-lockfile-doc python3-gssapi gsmartcontrol
  smart-notifier mailx | mailutils
The following NEW packages will be installed:
  duplicity libio-pty-perl libipc-run-perl librsync2 libtime-duration-perl
  libtimedate-perl moreutils prometheus-node-exporter
  prometheus-node-exporter-collectors python3-bcrypt python3-fasteners
  python3-future python3-lockfile python3-monotonic python3-paramiko
  smartmontools
The following packages will be upgraded:
  ca-certificates
1 upgraded, 16 newly installed, 0 to remove and 266 not upgraded.
changed: [AlessandroTambellini-1]
The following additional packages will be installed:
  libio-pty-perl libipc-run-perl librsync2 libtime-duration-perl
  libtimedate-perl moreutils prometheus-node-exporter-collectors
  python3-bcrypt python3-fasteners python3-future python3-lockfile
  python3-monotonic python3-paramiko smartmontools
Suggested packages:
  python3-boto ncftp lftp tahoe-lafs python3-swiftclient python3-pip par2
  python-future-doc python-lockfile-doc python3-gssapi gsmartcontrol
  smart-notifier mailx | mailutils
The following NEW packages will be installed:
  duplicity libio-pty-perl libipc-run-perl librsync2 libtime-duration-perl
  libtimedate-perl moreutils prometheus-node-exporter
  prometheus-node-exporter-collectors python3-bcrypt python3-fasteners
  python3-future python3-lockfile python3-monotonic python3-paramiko
  smartmontools
The following packages will be upgraded:
  ca-certificates
1 upgraded, 16 newly installed, 0 to remove and 266 not upgraded.
changed: [AlessandroTambellini-2]
The following additional packages will be installed:
  libio-pty-perl libipc-run-perl librsync2 libtime-duration-perl
  libtimedate-perl moreutils prometheus-node-exporter-collectors
  python3-bcrypt python3-fasteners python3-future python3-lockfile
  python3-monotonic python3-paramiko smartmontools
Suggested packages:
  python3-boto ncftp lftp tahoe-lafs python3-swiftclient python3-pip par2
  python-future-doc python-lockfile-doc python3-gssapi gsmartcontrol
  smart-notifier mailx | mailutils
The following NEW packages will be installed:
  duplicity libio-pty-perl libipc-run-perl librsync2 libtime-duration-perl
  libtimedate-perl moreutils prometheus-node-exporter
  prometheus-node-exporter-collectors python3-bcrypt python3-fasteners
  python3-future python3-lockfile python3-monotonic python3-paramiko
  smartmontools
The following packages will be upgraded:
  ca-certificates
1 upgraded, 16 newly installed, 0 to remove and 266 not upgraded.
changed: [AlessandroTambellini-3]

TASK [init : prometheus-node-exporter configuration] ***************************
--- before
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmpw46obfzo/prometheus_node_exporter.service.j2
@@ -0,0 +1,15 @@
+[Unit]
+Description=Prometheus Node Exporter
+Documentation=https://prometheus.io/docs/guides/node-exporter/
+Wants=network-online.target
+After=network-online.target
+
+[Service]
+Type=simple
+ExecStart=/usr/bin/prometheus-node-exporter --web.listen-address=:9100 
+Restart=always
+RestartSec=3
+
+[Install]
+WantedBy=multi-user.target
+

changed: [AlessandroTambellini-1]
--- before
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmpfaprcd3g/prometheus_node_exporter.service.j2
@@ -0,0 +1,15 @@
+[Unit]
+Description=Prometheus Node Exporter
+Documentation=https://prometheus.io/docs/guides/node-exporter/
+Wants=network-online.target
+After=network-online.target
+
+[Service]
+Type=simple
+ExecStart=/usr/bin/prometheus-node-exporter --web.listen-address=:9100 
+Restart=always
+RestartSec=3
+
+[Install]
+WantedBy=multi-user.target
+

changed: [AlessandroTambellini-3]
--- before
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmpzvi0f6a5/prometheus_node_exporter.service.j2
@@ -0,0 +1,15 @@
+[Unit]
+Description=Prometheus Node Exporter
+Documentation=https://prometheus.io/docs/guides/node-exporter/
+Wants=network-online.target
+After=network-online.target
+
+[Service]
+Type=simple
+ExecStart=/usr/bin/prometheus-node-exporter --web.listen-address=:9100 
+Restart=always
+RestartSec=3
+
+[Install]
+WantedBy=multi-user.target
+

changed: [AlessandroTambellini-2]

TASK [init : rsyslog config for Telegraf] **************************************
--- before
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmp_g1qalky/15-telegraf.conf.j2
@@ -0,0 +1,11 @@
+$ActionQueueType LinkedList # use asynchronous processing
+$ActionQueueFileName srvrfwd # set file name, also enables disk mode
+$ActionResumeRetryCount -1 # infinite retries on insert failure
+$ActionQueueSaveOnShutdown on # save in-memory data if rsyslog shuts down
+
+# forward over tcp with octet framing according to RFC 5425
+#*.* @@(o)127.0.0.1:6514;RSYSLOG_SyslogProtocol23Format
+
+# uncomment to use udp according to RFC 5424
+# send to influxdb ==> specify the influxdb server
+*.* @AlessandroTambellini-3:6514;RSYSLOG_SyslogProtocol23Format
\ No newline at end of file

changed: [AlessandroTambellini-1]
--- before
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmpyjd9ya6v/15-telegraf.conf.j2
@@ -0,0 +1,11 @@
+$ActionQueueType LinkedList # use asynchronous processing
+$ActionQueueFileName srvrfwd # set file name, also enables disk mode
+$ActionResumeRetryCount -1 # infinite retries on insert failure
+$ActionQueueSaveOnShutdown on # save in-memory data if rsyslog shuts down
+
+# forward over tcp with octet framing according to RFC 5425
+#*.* @@(o)127.0.0.1:6514;RSYSLOG_SyslogProtocol23Format
+
+# uncomment to use udp according to RFC 5424
+# send to influxdb ==> specify the influxdb server
+*.* @AlessandroTambellini-3:6514;RSYSLOG_SyslogProtocol23Format
\ No newline at end of file

changed: [AlessandroTambellini-3]
--- before
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmpotgwe_os/15-telegraf.conf.j2
@@ -0,0 +1,11 @@
+$ActionQueueType LinkedList # use asynchronous processing
+$ActionQueueFileName srvrfwd # set file name, also enables disk mode
+$ActionResumeRetryCount -1 # infinite retries on insert failure
+$ActionQueueSaveOnShutdown on # save in-memory data if rsyslog shuts down
+
+# forward over tcp with octet framing according to RFC 5425
+#*.* @@(o)127.0.0.1:6514;RSYSLOG_SyslogProtocol23Format
+
+# uncomment to use udp according to RFC 5424
+# send to influxdb ==> specify the influxdb server
+*.* @AlessandroTambellini-3:6514;RSYSLOG_SyslogProtocol23Format
\ No newline at end of file

changed: [AlessandroTambellini-2]

TASK [init : Ensure services are running] **************************************
ok: [AlessandroTambellini-1] => (item=prometheus-node-exporter)
ok: [AlessandroTambellini-2] => (item=prometheus-node-exporter)
ok: [AlessandroTambellini-3] => (item=prometheus-node-exporter)
ok: [AlessandroTambellini-1] => (item=rsyslog)
ok: [AlessandroTambellini-3] => (item=rsyslog)
ok: [AlessandroTambellini-2] => (item=rsyslog)

TASK [init : Add the user backup] **********************************************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-3]
changed: [AlessandroTambellini-2]

TASK [init : Add SSH key] ******************************************************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-3]
changed: [AlessandroTambellini-2]

TASK [init : create "restore" dir] *********************************************
--- before
+++ after
@@ -1,5 +1,5 @@
 {
-    "owner": 0,
+    "owner": 34,
     "path": "/home/backup/restore",
-    "state": "absent"
+    "state": "directory"
 }

changed: [AlessandroTambellini-1]
--- before
+++ after
@@ -1,5 +1,5 @@
 {
-    "owner": 0,
+    "owner": 34,
     "path": "/home/backup/restore",
-    "state": "absent"
+    "state": "directory"
 }

changed: [AlessandroTambellini-3]
--- before
+++ after
@@ -1,5 +1,5 @@
 {
-    "owner": 0,
+    "owner": 34,
     "path": "/home/backup/restore",
-    "state": "absent"
+    "state": "directory"
 }

changed: [AlessandroTambellini-2]

RUNNING HANDLER [init : restart prometheus-node-exporter] **********************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-3]
changed: [AlessandroTambellini-2]

RUNNING HANDLER [init : restart rsyslog] ***************************************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-3]
changed: [AlessandroTambellini-2]

PLAY [DNS servers] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-3]
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-2]

TASK [bind : Install bind9, prometheus-bind-exporter and python3-dnspython] ****
The following additional packages will be installed:
  bind9-dnsutils bind9-libs bind9-utils dns-root-data python3-ply
Suggested packages:
  bind-doc resolvconf python-ply-doc
The following NEW packages will be installed:
  bind9 bind9-utils dns-root-data prometheus-bind-exporter python3-dnspython
  python3-ply
The following packages will be upgraded:
  bind9-dnsutils bind9-libs
2 upgraded, 6 newly installed, 0 to remove and 264 not upgraded.
changed: [AlessandroTambellini-1]
The following additional packages will be installed:
  bind9-dnsutils bind9-libs bind9-utils dns-root-data python3-ply
Suggested packages:
  bind-doc resolvconf python-ply-doc
The following NEW packages will be installed:
  bind9 bind9-utils dns-root-data prometheus-bind-exporter python3-dnspython
  python3-ply
The following packages will be upgraded:
  bind9-dnsutils bind9-libs
2 upgraded, 6 newly installed, 0 to remove and 264 not upgraded.
changed: [AlessandroTambellini-2]
The following additional packages will be installed:
  bind9-dnsutils bind9-libs bind9-utils dns-root-data python3-ply
Suggested packages:
  bind-doc resolvconf python-ply-doc
The following NEW packages will be installed:
  bind9 bind9-utils dns-root-data prometheus-bind-exporter python3-dnspython
  python3-ply
The following packages will be upgraded:
  bind9-dnsutils bind9-libs
2 upgraded, 6 newly installed, 0 to remove and 264 not upgraded.
changed: [AlessandroTambellini-3]

TASK [bind : bind9 named.conf.options] *****************************************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-3]
changed: [AlessandroTambellini-2]

TASK [bind : bind9 named.conf.local] *******************************************
--- before: /etc/bind/named.conf.local
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmputbp3ahf/named.conf.local.j2
@@ -1,8 +1,25 @@
-//
-// Do any local configuration here
-//
+zone "rabix.io" {
+    type secondary;
+    masters {
+        192.168.42.151;
+    };
+    file "db.rabix.io";
+};
 
-// Consider adding the 1918 zones here, if they are not used in your
-// organization
-//include "/etc/bind/zones.rfc1918";
+server 192.168.42.151 {
+    keys { 
+        transfer.key; 
+    };
+};
 
+zone 168.192.in-addr.arpa {
+    type secondary;
+    allow-transfer {
+        127.0.0.1;
+    };
+    masters {
+    192.168.42.151;
+    };
+    file "db.rev";
+};
+

changed: [AlessandroTambellini-1]
--- before: /etc/bind/named.conf.local
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmp5v6uw9hk/named.conf.local.j2
@@ -1,8 +1,27 @@
-//
-// Do any local configuration here
-//
+zone "rabix.io" {
+    type primary;
+    allow-update { 
+        127.0.0.1;
+        key nsupdate.key; 
+    };
+    allow-transfer { 
+        127.0.0.1;
+        key transfer.key; 
+    };
+    file "db.rabix.io";
+};
 
-// Consider adding the 1918 zones here, if they are not used in your
-// organization
-//include "/etc/bind/zones.rfc1918";
 
+zone 168.192.in-addr.arpa {
+    type primary;
+    allow-update { 
+        key nsupdate.key; 
+    };
+    allow-transfer { 
+        127.0.0.1;
+        192.168.42.167;
+        key transfer.key;
+    };
+    file "db.rev";
+};
+

changed: [AlessandroTambellini-3]
--- before: /etc/bind/named.conf.local
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmpq_wqlp_t/named.conf.local.j2
@@ -1,8 +1,25 @@
-//
-// Do any local configuration here
-//
+zone "rabix.io" {
+    type secondary;
+    masters {
+        192.168.42.151;
+    };
+    file "db.rabix.io";
+};
 
-// Consider adding the 1918 zones here, if they are not used in your
-// organization
-//include "/etc/bind/zones.rfc1918";
+server 192.168.42.151 {
+    keys { 
+        transfer.key; 
+    };
+};
 
+zone 168.192.in-addr.arpa {
+    type secondary;
+    allow-transfer {
+        127.0.0.1;
+    };
+    masters {
+    192.168.42.151;
+    };
+    file "db.rev";
+};
+

changed: [AlessandroTambellini-2]

TASK [bind : primary zone config] **********************************************
skipping: [AlessandroTambellini-1]
skipping: [AlessandroTambellini-2]
--- before
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmpclw5srq9/db.rabix.io.j2
@@ -0,0 +1,16 @@
+$TTL 604800
+rabix.io. IN SOA AlessandroTambellini-3.rabix.io. alessandro.rabix.io. (
+          2 ; Serial
+     604800 ; Refresh
+      86400 ; Retry
+    2419200 ; Expire
+     604800 ; Negative Cache TTL
+)
+rabix.io. IN NS AlessandroTambellini-3
+rabix.io. IN NS AlessandroTambellini-1
+rabix.io. IN NS AlessandroTambellini-2
+AlessandroTambellini-1 IN A 192.168.42.167
+AlessandroTambellini-2 IN A 192.168.42.139
+AlessandroTambellini-3 IN A 192.168.42.151
+
+

changed: [AlessandroTambellini-3]

TASK [bind : rev zone config] **************************************************
skipping: [AlessandroTambellini-1]
skipping: [AlessandroTambellini-2]
--- before
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmph2os4tko/db.rev.j2
@@ -0,0 +1,16 @@
+$TTL 604800
+168.192.in-addr.arpa. IN SOA AlessandroTambellini-3.rabix.io. alessandro.rabix.io. (
+          2 ; Serial
+     604800 ; Refresh
+      86400 ; Retry
+    2419200 ; Expire
+     604800 ; Negative Cache TTL
+);
+167.42 IN PTR AlessandroTambellini-1.rabix.io.;
+139.42 IN PTR AlessandroTambellini-2.rabix.io.;
+151.42 IN PTR AlessandroTambellini-3.rabix.io.;
+168.192.in-addr.arpa. IN NS AlessandroTambellini-3.rabix.io.
+168.192.in-addr.arpa. IN NS AlessandroTambellini-1.rabix.io.
+168.192.in-addr.arpa. IN NS AlessandroTambellini-2.rabix.io.
+
+

changed: [AlessandroTambellini-3]

TASK [bind : meta] *************************************************************

RUNNING HANDLER [bind : Restart bind9] *****************************************
changed: [AlessandroTambellini-3]

RUNNING HANDLER [bind : Run rndc reload] ***************************************
changed: [AlessandroTambellini-3]
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-2]

TASK [bind : Ensure services are started] **************************************
ok: [AlessandroTambellini-3] => (item=bind9)
ok: [AlessandroTambellini-1] => (item=bind9)
ok: [AlessandroTambellini-2] => (item=bind9)
ok: [AlessandroTambellini-3] => (item=prometheus-bind-exporter)
ok: [AlessandroTambellini-1] => (item=prometheus-bind-exporter)
ok: [AlessandroTambellini-2] => (item=prometheus-bind-exporter)

TASK [bind : Set A record for backup server] ***********************************
skipping: [AlessandroTambellini-1]
skipping: [AlessandroTambellini-2]
changed: [AlessandroTambellini-3]

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for ns-3 server] ***************************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-3]
changed: [AlessandroTambellini-2]

PLAY [Resolvers] ***************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-3]
ok: [AlessandroTambellini-2]

TASK [resolvers : Stop service systemd-resolved, if started] *******************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-3]
changed: [AlessandroTambellini-2]

TASK [resolvers : Update VM DNS settings] **************************************
--- before: /etc/resolv.conf
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmpv7w3fpsj/DNS_settings.j2
@@ -1,19 +1,4 @@
-# This file is managed by man:systemd-resolved(8). Do not edit.
-#
-# This is a dynamic resolv.conf file for connecting local clients to the
-# internal DNS stub resolver of systemd-resolved. This file lists all
-# configured search domains.
-#
-# Run "resolvectl status" to see details about the uplink DNS servers
-# currently in use.
-#
-# Third party programs must not access this file directly, but only through the
-# symlink at /etc/resolv.conf. To manage man:resolv.conf(5) in a different way,
-# replace this symlink by a static file or a different symlink.
-#
-# See man:systemd-resolved.service(8) for details about the supported modes of
-# operation for /etc/resolv.conf.
+search rabix.io
+nameserver 192.168.42.167
+nameserver 192.168.42.139
 
-nameserver 127.0.0.53
-options edns0 trust-ad
-search openstacklocal

changed: [AlessandroTambellini-1]
--- before: /etc/resolv.conf
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmpuiu_blmh/DNS_settings.j2
@@ -1,19 +1,4 @@
-# This file is managed by man:systemd-resolved(8). Do not edit.
-#
-# This is a dynamic resolv.conf file for connecting local clients to the
-# internal DNS stub resolver of systemd-resolved. This file lists all
-# configured search domains.
-#
-# Run "resolvectl status" to see details about the uplink DNS servers
-# currently in use.
-#
-# Third party programs must not access this file directly, but only through the
-# symlink at /etc/resolv.conf. To manage man:resolv.conf(5) in a different way,
-# replace this symlink by a static file or a different symlink.
-#
-# See man:systemd-resolved.service(8) for details about the supported modes of
-# operation for /etc/resolv.conf.
+search rabix.io
+nameserver 192.168.42.167
+nameserver 192.168.42.139
 
-nameserver 127.0.0.53
-options edns0 trust-ad
-search openstacklocal

changed: [AlessandroTambellini-3]
--- before: /etc/resolv.conf
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmpug17iiq0/DNS_settings.j2
@@ -1,19 +1,4 @@
-# This file is managed by man:systemd-resolved(8). Do not edit.
-#
-# This is a dynamic resolv.conf file for connecting local clients to the
-# internal DNS stub resolver of systemd-resolved. This file lists all
-# configured search domains.
-#
-# Run "resolvectl status" to see details about the uplink DNS servers
-# currently in use.
-#
-# Third party programs must not access this file directly, but only through the
-# symlink at /etc/resolv.conf. To manage man:resolv.conf(5) in a different way,
-# replace this symlink by a static file or a different symlink.
-#
-# See man:systemd-resolved.service(8) for details about the supported modes of
-# operation for /etc/resolv.conf.
+search rabix.io
+nameserver 192.168.42.167
+nameserver 192.168.42.139
 
-nameserver 127.0.0.53
-options edns0 trust-ad
-search openstacklocal

changed: [AlessandroTambellini-2]

PLAY [Database server] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-2]

TASK [mysql : prometheus-mysqld-exporter user configuration] *******************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-2]

TASK [mysql : prometheus-mysqld-exporter args] *********************************
--- before
+++ after: /home/alessandro/repos/ica0002/roles/mysql/files/prometheus-mysqld-exporter
@@ -0,0 +1 @@
+ARGS="--collect.slave_status"

changed: [AlessandroTambellini-1]
--- before
+++ after: /home/alessandro/repos/ica0002/roles/mysql/files/prometheus-mysqld-exporter
@@ -0,0 +1 @@
+ARGS="--collect.slave_status"

changed: [AlessandroTambellini-2]

TASK [mysql : Install required packages] ***************************************
The following additional packages will be installed:
  daemon libcgi-fast-perl libcgi-pm-perl libencode-locale-perl
  libevent-core-2.1-7 libevent-pthreads-2.1-7 libfcgi-perl libhtml-parser-perl
  libhtml-tagset-perl libhtml-template-perl libhttp-date-perl
  libhttp-message-perl libio-html-perl liblwp-mediatypes-perl libmecab2
  liburi-perl mecab-ipadic mecab-ipadic-utf8 mecab-utils mysql-client-8.0
  mysql-client-core-8.0 mysql-common mysql-server-8.0 mysql-server-core-8.0
Suggested packages:
  libdata-dump-perl libipc-sharedcache-perl libwww-perl mailx tinyca
  python-pymysql-doc
The following NEW packages will be installed:
  daemon libcgi-fast-perl libcgi-pm-perl libencode-locale-perl
  libevent-core-2.1-7 libevent-pthreads-2.1-7 libfcgi-perl libhtml-parser-perl
  libhtml-tagset-perl libhtml-template-perl libhttp-date-perl
  libhttp-message-perl libio-html-perl liblwp-mediatypes-perl libmecab2
  liburi-perl mecab-ipadic mecab-ipadic-utf8 mecab-utils mysql-client-8.0
  mysql-client-core-8.0 mysql-common mysql-server mysql-server-8.0
  mysql-server-core-8.0 prometheus-mysqld-exporter python3-pymysql
0 upgraded, 27 newly installed, 0 to remove and 264 not upgraded.
changed: [AlessandroTambellini-1]
The following additional packages will be installed:
  daemon libcgi-fast-perl libcgi-pm-perl libencode-locale-perl
  libevent-core-2.1-7 libevent-pthreads-2.1-7 libfcgi-perl libhtml-parser-perl
  libhtml-tagset-perl libhtml-template-perl libhttp-date-perl
  libhttp-message-perl libio-html-perl liblwp-mediatypes-perl libmecab2
  liburi-perl mecab-ipadic mecab-ipadic-utf8 mecab-utils mysql-client-8.0
  mysql-client-core-8.0 mysql-common mysql-server-8.0 mysql-server-core-8.0
Suggested packages:
  libdata-dump-perl libipc-sharedcache-perl libwww-perl mailx tinyca
  python-pymysql-doc
The following NEW packages will be installed:
  daemon libcgi-fast-perl libcgi-pm-perl libencode-locale-perl
  libevent-core-2.1-7 libevent-pthreads-2.1-7 libfcgi-perl libhtml-parser-perl
  libhtml-tagset-perl libhtml-template-perl libhttp-date-perl
  libhttp-message-perl libio-html-perl liblwp-mediatypes-perl libmecab2
  liburi-perl mecab-ipadic mecab-ipadic-utf8 mecab-utils mysql-client-8.0
  mysql-client-core-8.0 mysql-common mysql-server mysql-server-8.0
  mysql-server-core-8.0 prometheus-mysqld-exporter python3-pymysql
0 upgraded, 27 newly installed, 0 to remove and 264 not upgraded.
changed: [AlessandroTambellini-2]

TASK [mysql : MySQL exporter user] *********************************************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-2]

TASK [mysql : Ensure MySQL services are started] *******************************
ok: [AlessandroTambellini-1] => (item=mysql)
ok: [AlessandroTambellini-2] => (item=mysql)
ok: [AlessandroTambellini-1] => (item=prometheus-mysqld-exporter)
ok: [AlessandroTambellini-2] => (item=prometheus-mysqld-exporter)

TASK [mysql : Create agama database] *******************************************
changed: [AlessandroTambellini-2]
changed: [AlessandroTambellini-1]

TASK [mysql : MySQL agama user] ************************************************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-2]

TASK [mysql : MySQL configuration] *********************************************
--- before
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmp870b6ibp/override.cnf.j2
@@ -0,0 +1,6 @@
+[mysqld]
+bind-address = *
+log-bin = /var/log/mysql/mysql-bin.log
+relay-log = /var/log/mysql/mysql-relay.log
+replicate-do-db = agama
+server-id = 167

changed: [AlessandroTambellini-1]
--- before
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmp6i5wywoj/override.cnf.j2
@@ -0,0 +1,6 @@
+[mysqld]
+bind-address = *
+log-bin = /var/log/mysql/mysql-bin.log
+relay-log = /var/log/mysql/mysql-relay.log
+replicate-do-db = agama
+server-id = 139

changed: [AlessandroTambellini-2]

TASK [mysql : create backup dir for mysql] *************************************
--- before
+++ after
@@ -1,5 +1,5 @@
 {
-    "owner": 0,
+    "owner": 34,
     "path": "/home/backup/mysql",
-    "state": "absent"
+    "state": "directory"
 }

changed: [AlessandroTambellini-1]
--- before
+++ after
@@ -1,5 +1,5 @@
 {
-    "owner": 0,
+    "owner": 34,
     "path": "/home/backup/mysql",
-    "state": "absent"
+    "state": "directory"
 }

changed: [AlessandroTambellini-2]

TASK [mysql : backup user] *****************************************************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-2]

TASK [mysql : Client config] ***************************************************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-2]

TASK [mysql : Cron config] *****************************************************
--- before
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmpf82eiqa6/mysql-backup.j2
@@ -0,0 +1 @@
+

changed: [AlessandroTambellini-1]
--- before
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmpwvoz_lhb/mysql-backup.j2
@@ -0,0 +1,3 @@
+30 21 * * *  backup  mysqldump agama > /home/backup/mysql/agama.sql
+00 22 * * 0  backup  duplicity --no-encryption full /home/backup/mysql/ rsync://AlessandroTambellini@backup.rabix.io/mysql
+00 22 * * 1-6  backup  duplicity --no-encryption incremental /home/backup/mysql/ rsync://AlessandroTambellini@backup.rabix.io/mysql

changed: [AlessandroTambellini-2]

TASK [mysql : MySQL replication user] ******************************************
changed: [AlessandroTambellini-2]
changed: [AlessandroTambellini-1]

TASK [mysql : set read-only mode to db] ****************************************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-2]

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for mysql-1 server] ************************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-2]

RUNNING HANDLER [mysql : Restart MySQL] ****************************************
changed: [AlessandroTambellini-2]
changed: [AlessandroTambellini-1]

RUNNING HANDLER [mysql : Restart prometheus-mysqld-exporter] *******************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-2]

RUNNING HANDLER [mysql : Reset MySQL source] ***********************************
skipping: [AlessandroTambellini-2] => (item=stopreplica) 
skipping: [AlessandroTambellini-2] => (item=resetprimary) 
ok: [AlessandroTambellini-1] => (item=stopreplica)
changed: [AlessandroTambellini-1] => (item=resetprimary)

RUNNING HANDLER [mysql : Reset MySQL replica] **********************************
skipping: [AlessandroTambellini-1] => (item=None) 
skipping: [AlessandroTambellini-1] => (item=None) 
skipping: [AlessandroTambellini-1] => (item=None) 
skipping: [AlessandroTambellini-1] => (item=None) 
skipping: [AlessandroTambellini-1]
ok: [AlessandroTambellini-2] => (item=None)
changed: [AlessandroTambellini-2] => (item=None)
changed: [AlessandroTambellini-2] => (item=None)
changed: [AlessandroTambellini-2] => (item=None)
changed: [AlessandroTambellini-2]

PLAY [Docker servers] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-3]

TASK [docker : Install python3-docker and docker.io] ***************************
The following additional packages will be installed:
  bridge-utils containerd dnsmasq-base libidn11 pigz python3-websocket runc
  ubuntu-fan
Suggested packages:
  ifupdown aufs-tools cgroupfs-mount | cgroup-lite debootstrap docker-doc
  rinse zfs-fuse | zfsutils
The following NEW packages will be installed:
  bridge-utils containerd dnsmasq-base docker.io libidn11 pigz python3-docker
  python3-websocket runc ubuntu-fan
0 upgraded, 10 newly installed, 0 to remove and 264 not upgraded.
changed: [AlessandroTambellini-3]
The following additional packages will be installed:
  bridge-utils containerd dnsmasq-base libidn11 pigz python3-websocket runc
  ubuntu-fan
Suggested packages:
  ifupdown aufs-tools cgroupfs-mount | cgroup-lite debootstrap docker-doc
  rinse zfs-fuse | zfsutils
The following NEW packages will be installed:
  bridge-utils containerd dnsmasq-base docker.io libidn11 pigz python3-docker
  python3-websocket runc ubuntu-fan
0 upgraded, 10 newly installed, 0 to remove and 264 not upgraded.
changed: [AlessandroTambellini-2]
The following additional packages will be installed:
  bridge-utils containerd dnsmasq-base libidn11 pigz python3-websocket runc
  ubuntu-fan
Suggested packages:
  ifupdown aufs-tools cgroupfs-mount | cgroup-lite debootstrap docker-doc
  rinse zfs-fuse | zfsutils
The following NEW packages will be installed:
  bridge-utils containerd dnsmasq-base docker.io libidn11 pigz python3-docker
  python3-websocket runc ubuntu-fan
0 upgraded, 10 newly installed, 0 to remove and 264 not upgraded.
changed: [AlessandroTambellini-1]

TASK [docker : Ensure service is running] **************************************
ok: [AlessandroTambellini-3]
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-2]

PLAY [agama servers] ***********************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-2]

TASK [agama : Create dir] ******************************************************
--- before
+++ after
@@ -1,4 +1,4 @@
 {
     "path": "/opt/agama",
-    "state": "absent"
+    "state": "directory"
 }

changed: [AlessandroTambellini-1]
--- before
+++ after
@@ -1,4 +1,4 @@
 {
     "path": "/opt/agama",
-    "state": "absent"
+    "state": "directory"
 }

changed: [AlessandroTambellini-2]

TASK [agama : Download agama and Dockerfile] ***********************************
changed: [AlessandroTambellini-1] => (item=https://raw.githubusercontent.com/hudolejev/agama/master/agama.py)
changed: [AlessandroTambellini-2] => (item=https://raw.githubusercontent.com/hudolejev/agama/master/agama.py)
changed: [AlessandroTambellini-1] => (item=https://raw.githubusercontent.com/hudolejev/agama/master/Dockerfile)
changed: [AlessandroTambellini-2] => (item=https://raw.githubusercontent.com/hudolejev/agama/master/Dockerfile)

TASK [agama : Build image] *****************************************************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-2]

TASK [agama : agama containers] ************************************************
changed: [AlessandroTambellini-2] => (item=None)
changed: [AlessandroTambellini-1] => (item=None)
changed: [AlessandroTambellini-2] => (item=None)
changed: [AlessandroTambellini-2]
changed: [AlessandroTambellini-1] => (item=None)
changed: [AlessandroTambellini-1]

TASK [agama : Get number of containers] ****************************************
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-2]

TASK [agama : Delete unused containers] ****************************************
ok: [AlessandroTambellini-1] => (item=3)
ok: [AlessandroTambellini-2] => (item=3)
ok: [AlessandroTambellini-1] => (item=4)
ok: [AlessandroTambellini-2] => (item=4)
ok: [AlessandroTambellini-1] => (item=5)
ok: [AlessandroTambellini-2] => (item=5)

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for www-1 server] **************************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-2]

PLAY [haproxy] *****************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-2]

TASK [haproxy : Install haproxy and prometheus-haproxy-exporter] ***************
The following additional packages will be installed:
  liblua5.3-0
Suggested packages:
  vim-haproxy haproxy-doc
The following NEW packages will be installed:
  haproxy liblua5.3-0 prometheus-haproxy-exporter
0 upgraded, 3 newly installed, 0 to remove and 264 not upgraded.
changed: [AlessandroTambellini-1]
The following additional packages will be installed:
  liblua5.3-0
Suggested packages:
  vim-haproxy haproxy-doc
The following NEW packages will be installed:
  haproxy liblua5.3-0 prometheus-haproxy-exporter
0 upgraded, 3 newly installed, 0 to remove and 264 not upgraded.
changed: [AlessandroTambellini-2]

TASK [haproxy : HAProxy config] ************************************************
--- before: /etc/haproxy/haproxy.cfg
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmptzyqfhes/haproxy.cfg.j2
@@ -1,34 +1,39 @@
 global
-	log /dev/log	local0
-	log /dev/log	local1 notice
-	chroot /var/lib/haproxy
-	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
-	stats timeout 30s
-	user haproxy
-	group haproxy
-	daemon
-
-	# Default SSL material locations
-	ca-base /etc/ssl/certs
-	crt-base /etc/ssl/private
-
-	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
-        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
-        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
-        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
+        log /dev/log    local0
+        log /dev/log    local1 notice
+        chroot /var/lib/haproxy
+        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
+        stats timeout 30s
+        user haproxy
+        group haproxy
+        daemon
 
 defaults
-	log	global
-	mode	http
-	option	httplog
-	option	dontlognull
+        log     global
+        mode    http
+        option  httplog
+        option  dontlognull
         timeout connect 5000
         timeout client  50000
         timeout server  50000
-	errorfile 400 /etc/haproxy/errors/400.http
-	errorfile 403 /etc/haproxy/errors/403.http
-	errorfile 408 /etc/haproxy/errors/408.http
-	errorfile 500 /etc/haproxy/errors/500.http
-	errorfile 502 /etc/haproxy/errors/502.http
-	errorfile 503 /etc/haproxy/errors/503.http
-	errorfile 504 /etc/haproxy/errors/504.http
+        errorfile 400 /etc/haproxy/errors/400.http
+        errorfile 403 /etc/haproxy/errors/403.http
+        errorfile 408 /etc/haproxy/errors/408.http
+        errorfile 500 /etc/haproxy/errors/500.http
+        errorfile 502 /etc/haproxy/errors/502.http
+        errorfile 503 /etc/haproxy/errors/503.http
+
+listen agama
+        bind *:88
+        server agama-1-AlessandroTambellini-1 AlessandroTambellini-1:8001 check
+        server agama-1-AlessandroTambellini-2 AlessandroTambellini-2:8001 check
+        server agama-2-AlessandroTambellini-1 AlessandroTambellini-1:8002 check
+        server agama-2-AlessandroTambellini-2 AlessandroTambellini-2:8002 check
+
+listen stats
+        bind *:9188
+        http-request use-service prometheus-exporter if { path /metrics }
+        stats enable
+        stats uri /stats
+        stats refresh 5s
+

changed: [AlessandroTambellini-1]
--- before: /etc/haproxy/haproxy.cfg
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmpi_ce4pjv/haproxy.cfg.j2
@@ -1,34 +1,39 @@
 global
-	log /dev/log	local0
-	log /dev/log	local1 notice
-	chroot /var/lib/haproxy
-	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
-	stats timeout 30s
-	user haproxy
-	group haproxy
-	daemon
-
-	# Default SSL material locations
-	ca-base /etc/ssl/certs
-	crt-base /etc/ssl/private
-
-	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
-        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
-        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
-        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
+        log /dev/log    local0
+        log /dev/log    local1 notice
+        chroot /var/lib/haproxy
+        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
+        stats timeout 30s
+        user haproxy
+        group haproxy
+        daemon
 
 defaults
-	log	global
-	mode	http
-	option	httplog
-	option	dontlognull
+        log     global
+        mode    http
+        option  httplog
+        option  dontlognull
         timeout connect 5000
         timeout client  50000
         timeout server  50000
-	errorfile 400 /etc/haproxy/errors/400.http
-	errorfile 403 /etc/haproxy/errors/403.http
-	errorfile 408 /etc/haproxy/errors/408.http
-	errorfile 500 /etc/haproxy/errors/500.http
-	errorfile 502 /etc/haproxy/errors/502.http
-	errorfile 503 /etc/haproxy/errors/503.http
-	errorfile 504 /etc/haproxy/errors/504.http
+        errorfile 400 /etc/haproxy/errors/400.http
+        errorfile 403 /etc/haproxy/errors/403.http
+        errorfile 408 /etc/haproxy/errors/408.http
+        errorfile 500 /etc/haproxy/errors/500.http
+        errorfile 502 /etc/haproxy/errors/502.http
+        errorfile 503 /etc/haproxy/errors/503.http
+
+listen agama
+        bind *:88
+        server agama-1-AlessandroTambellini-1 AlessandroTambellini-1:8001 check
+        server agama-1-AlessandroTambellini-2 AlessandroTambellini-2:8001 check
+        server agama-2-AlessandroTambellini-1 AlessandroTambellini-1:8002 check
+        server agama-2-AlessandroTambellini-2 AlessandroTambellini-2:8002 check
+
+listen stats
+        bind *:9188
+        http-request use-service prometheus-exporter if { path /metrics }
+        stats enable
+        stats uri /stats
+        stats refresh 5s
+

changed: [AlessandroTambellini-2]

TASK [haproxy : HAProxy exporter config] ***************************************
--- before: /etc/default/prometheus-haproxy-exporter
+++ after: /home/alessandro/repos/ica0002/roles/haproxy/files/prometheus-haproxy-exporter
@@ -1,35 +1 @@
-# Set the command-line arguments to pass to the server.
-# Due to shell scaping, to pass backslashes for regexes, you need to double
-# them (\\d for \d). If running under systemd, you need to double them again
-# (\\\\d to mean \d), and escape newlines too.
-ARGS=""
-
-# Prometheus-haproxy-exporter supports the following options:
-#
-#  --web.listen-address=":9101"
-#    Address to listen on for web interface and telemetry.
-#  --web.telemetry-path="/metrics"
-#    Path under which to expose metrics.
-#  --haproxy.scrape-uri="http://localhost/;csv"
-#    URI on which to scrape HAProxy.
-#  --haproxy.ssl-verify
-#    Flag that enables SSL certificate verification for the scrape URI
-#  --haproxy.server-metric-fields="2,3,4,5,6,7,8,9,13,14,15,16,17,18,21,24,33,35,38,39,40,41,42,43,44"
-#    Comma-separated list of exported server metrics. See
-#    http://cbonte.github.io/haproxy-dconv/configuration-1.5.html#9.1
-#  --haproxy.timeout=5s
-#    Timeout for trying to get stats from HAProxy.
-#  --haproxy.pid-file=""
-#    Path to HAProxy pid file.
-#
-#    If provided, the standard process metrics get exported for the HAProxy
-#    process, prefixed with 'haproxy_process_...'. The haproxy_process exporter
-#    needs to have read access to files owned by the HAProxy process. Depends
-#    on the availability of /proc.
-#    https://prometheus.io/docs/instrumenting/writing_clientlibs/#process-metrics.
-#  --log.level="info"
-#    Only log messages with the given severity or above.
-#    Valid levels: [debug, info, warn, error, fatal]
-#  --log.format="logger:stderr"
-#    Set the log target and format. Example:
-#    "logger:syslog?appname=bob&local=7" or "logger:stdout?json=true"
+ARGS="--haproxy.scrape-uri='http://localhost:9188/stats?stats;csv'"

changed: [AlessandroTambellini-1]
--- before: /etc/default/prometheus-haproxy-exporter
+++ after: /home/alessandro/repos/ica0002/roles/haproxy/files/prometheus-haproxy-exporter
@@ -1,35 +1 @@
-# Set the command-line arguments to pass to the server.
-# Due to shell scaping, to pass backslashes for regexes, you need to double
-# them (\\d for \d). If running under systemd, you need to double them again
-# (\\\\d to mean \d), and escape newlines too.
-ARGS=""
-
-# Prometheus-haproxy-exporter supports the following options:
-#
-#  --web.listen-address=":9101"
-#    Address to listen on for web interface and telemetry.
-#  --web.telemetry-path="/metrics"
-#    Path under which to expose metrics.
-#  --haproxy.scrape-uri="http://localhost/;csv"
-#    URI on which to scrape HAProxy.
-#  --haproxy.ssl-verify
-#    Flag that enables SSL certificate verification for the scrape URI
-#  --haproxy.server-metric-fields="2,3,4,5,6,7,8,9,13,14,15,16,17,18,21,24,33,35,38,39,40,41,42,43,44"
-#    Comma-separated list of exported server metrics. See
-#    http://cbonte.github.io/haproxy-dconv/configuration-1.5.html#9.1
-#  --haproxy.timeout=5s
-#    Timeout for trying to get stats from HAProxy.
-#  --haproxy.pid-file=""
-#    Path to HAProxy pid file.
-#
-#    If provided, the standard process metrics get exported for the HAProxy
-#    process, prefixed with 'haproxy_process_...'. The haproxy_process exporter
-#    needs to have read access to files owned by the HAProxy process. Depends
-#    on the availability of /proc.
-#    https://prometheus.io/docs/instrumenting/writing_clientlibs/#process-metrics.
-#  --log.level="info"
-#    Only log messages with the given severity or above.
-#    Valid levels: [debug, info, warn, error, fatal]
-#  --log.format="logger:stderr"
-#    Set the log target and format. Example:
-#    "logger:syslog?appname=bob&local=7" or "logger:stdout?json=true"
+ARGS="--haproxy.scrape-uri='http://localhost:9188/stats?stats;csv'"

changed: [AlessandroTambellini-2]

TASK [haproxy : Ensure services are running] ***********************************
ok: [AlessandroTambellini-1] => (item=haproxy)
ok: [AlessandroTambellini-2] => (item=haproxy)
ok: [AlessandroTambellini-1] => (item=prometheus-haproxy-exporter)
ok: [AlessandroTambellini-2] => (item=prometheus-haproxy-exporter)

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for lb-1 server] ***************************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-2]

RUNNING HANDLER [haproxy : Restart haproxy] ************************************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-2]

RUNNING HANDLER [haproxy : Restart prometheus-haproxy-exporter] ****************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-2]

PLAY [keepalived] **************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-2]

TASK [keepalived : Install keepalived] *****************************************
The following additional packages will be installed:
  ipvsadm libmysqlclient21 libnl-3-200 libnl-genl-3-200 libsensors-config
  libsensors5 libsnmp-base libsnmp35
Suggested packages:
  heartbeat ldirectord lm-sensors snmp-mibs-downloader
The following NEW packages will be installed:
  ipvsadm keepalived libmysqlclient21 libnl-3-200 libnl-genl-3-200
  libsensors-config libsensors5 libsnmp-base libsnmp35
0 upgraded, 9 newly installed, 0 to remove and 264 not upgraded.
changed: [AlessandroTambellini-2]
The following additional packages will be installed:
  ipvsadm libmysqlclient21 libnl-3-200 libnl-genl-3-200 libsensors-config
  libsensors5 libsnmp-base libsnmp35
Suggested packages:
  heartbeat ldirectord lm-sensors snmp-mibs-downloader
The following NEW packages will be installed:
  ipvsadm keepalived libmysqlclient21 libnl-3-200 libnl-genl-3-200
  libsensors-config libsensors5 libsnmp-base libsnmp35
0 upgraded, 9 newly installed, 0 to remove and 264 not upgraded.
changed: [AlessandroTambellini-1]

TASK [keepalived : Create user 'keepalived_script'] ****************************
changed: [AlessandroTambellini-2]
changed: [AlessandroTambellini-1]

TASK [keepalived : Create dir 'keepalived_script'] *****************************
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-2]

TASK [keepalived : haproxy script] *********************************************
--- before
+++ after: /home/alessandro/repos/ica0002/roles/keepalived/files/check_haproxy.sh
@@ -0,0 +1,2 @@
+#!/bin/bash
+ss -ntl | grep -q ':88 '
\ No newline at end of file

changed: [AlessandroTambellini-1]
--- before
+++ after: /home/alessandro/repos/ica0002/roles/keepalived/files/check_haproxy.sh
@@ -0,0 +1,2 @@
+#!/bin/bash
+ss -ntl | grep -q ':88 '
\ No newline at end of file

changed: [AlessandroTambellini-2]

TASK [keepalived : Keepalived config] ******************************************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-2]

TASK [keepalived : Download keepalived-exporter] *******************************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-2]

TASK [keepalived : Unarchive keepalived-exporter] ******************************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-2]

TASK [keepalived : Move keepalived-exporter executable] ************************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-2]

TASK [keepalived : keepalived-exporter config] *********************************
--- before
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmp0rj7esxu/keepalived-exporter.service.j2
@@ -0,0 +1,11 @@
+[Unit]
+Description=keepalived-exporter service
+Documentation=https://github.com/mehdy/keepalived-exporter
+After=network-online.target
+
+[Service]
+User=root
+ExecStart=/usr/local/bin/keepalived-exporter
+  
+[Install]
+WantedBy=multi-user.target

changed: [AlessandroTambellini-1]
--- before
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmpj1tt6qs5/keepalived-exporter.service.j2
@@ -0,0 +1,11 @@
+[Unit]
+Description=keepalived-exporter service
+Documentation=https://github.com/mehdy/keepalived-exporter
+After=network-online.target
+
+[Service]
+User=root
+ExecStart=/usr/local/bin/keepalived-exporter
+  
+[Install]
+WantedBy=multi-user.target

changed: [AlessandroTambellini-2]

TASK [keepalived : Ensure keepalived is running] *******************************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-2]

TASK [keepalived : Ensure keepalived-exporter service is running] **************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-2]

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for ka-1 server] ***************************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-2]

RUNNING HANDLER [keepalived : Restart keepalived] ******************************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-2]

RUNNING HANDLER [keepalived : Restart keepalived-exporter] *********************
changed: [AlessandroTambellini-1]
changed: [AlessandroTambellini-2]

PLAY [InfluxDB] ****************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Install prerequisite packages] ********************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Download InfluxDB] ********************************************
changed: [AlessandroTambellini-3]

TASK [influxdb : Install InfluxDB] *********************************************
Selecting previously unselected package influxdb.
(Reading database ... 64918 files and directories currently installed.)
Preparing to unpack /opt/influxdb_1.8.10_amd64.deb ...
Unpacking influxdb (1.8.10-1) ...
Setting up influxdb (1.8.10-1) ...
Processing triggers for man-db (2.9.1-1) ...
changed: [AlessandroTambellini-3]

TASK [influxdb : InfluxDB config] **********************************************
--- before
+++ after: /home/alessandro/repos/ica0002/roles/influxdb/files/influxdb.conf
@@ -0,0 +1,10 @@
+[meta]
+  dir = "/var/lib/influxdb/meta"
+[data]
+  dir = "/var/lib/influxdb/data"
+  wal-dir = "/var/lib/influxdb/wal"
+  series-id-set-cache-size = 100
+  query-log-enabled = false
+[http]
+    log-enabled = false
+    write-tracing = false

changed: [AlessandroTambellini-3]

TASK [influxdb : Add GPG key] **************************************************
changed: [AlessandroTambellini-3]

TASK [influxdb : Add stable repository] ****************************************
--- before: /dev/null
+++ after: /etc/apt/sources.list.d/repos_influxdata_com_debian.list
@@ -0,0 +1 @@
+deb https://repos.influxdata.com/debian buster stable

changed: [AlessandroTambellini-3]

TASK [influxdb : Install telegraf] *********************************************
The following NEW packages will be installed:
  telegraf
0 upgraded, 1 newly installed, 0 to remove and 264 not upgraded.
changed: [AlessandroTambellini-3]

TASK [influxdb : Telegraf config] **********************************************
diff skipped: destination file size is greater than 104448
changed: [AlessandroTambellini-3]

TASK [influxdb : Ensure InfluxDB and Telegram are running] *********************
changed: [AlessandroTambellini-3] => (item=influxdb)
changed: [AlessandroTambellini-3] => (item=telegraf)

TASK [influxdb : Download Influxdb stats Exporter] *****************************
changed: [AlessandroTambellini-3]

TASK [influxdb : Exporter service config] **************************************
--- before
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmpr7gutzyv/prometheus-influxdb-stats-exporter.service.j2
@@ -0,0 +1,11 @@
+[Unit]
+Description=InfluxDB stats Exporter Service
+Documentation=https://github.com/carlpett/influxdb_stats_exporter#influxdb-stats-exporter
+After=network-online.target
+
+[Service]
+User=prometheus
+ExecStart=/usr/local/bin/influx_stats_exporter_linux_amd64
+
+[Install]
+WantedBy=multi-user.target

changed: [AlessandroTambellini-3]

TASK [influxdb : Ensure prometheus-influxdb-stats-exporter is running] *********
changed: [AlessandroTambellini-3]

TASK [influxdb : create backup dir for influxdb] *******************************
--- before
+++ after
@@ -1,5 +1,5 @@
 {
-    "owner": 0,
+    "owner": 34,
     "path": "/home/backup/influxdb",
-    "state": "absent"
+    "state": "directory"
 }

changed: [AlessandroTambellini-3]

TASK [influxdb : Cron config] **************************************************
--- before
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmpzuqc1izn/influxdb-backup.j2
@@ -0,0 +1,3 @@
+30 21 * * * backup rm -rf /home/backup/influxdb/*; influxd backup -portable -database telegraf /home/backup/influxdb
+00 22 * * 0  backup  duplicity --no-encryption full /home/backup/influxdb/ rsync://AlessandroTambellini@backup.rabix.io/influxdb
+00 22 * * 1-6  backup  duplicity --no-encryption incremental /home/backup/influxdb/ rsync://AlessandroTambellini@backup.rabix.io/influxdb

changed: [AlessandroTambellini-3]

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for influxdb server] ***********************
changed: [AlessandroTambellini-3]

RUNNING HANDLER [influxdb : Restart InfluxDB] **********************************
changed: [AlessandroTambellini-3]

RUNNING HANDLER [influxdb : Restart Telegraf] **********************************
changed: [AlessandroTambellini-3]

RUNNING HANDLER [influxdb : Restart prometheus-influxdb-stats-exporter] ********
changed: [AlessandroTambellini-3]

PLAY [pinger] ******************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-3]

TASK [pinger : Install prerequisite pkgs] **************************************
The following NEW packages will be installed:
  fping
0 upgraded, 1 newly installed, 0 to remove and 265 not upgraded.
changed: [AlessandroTambellini-3]

TASK [pinger : Add the user 'pinger'] ******************************************
changed: [AlessandroTambellini-3]

TASK [pinger : Create pinger dir] **********************************************
--- before
+++ after
@@ -1,4 +1,4 @@
 {
     "path": "/etc/pinger",
-    "state": "absent"
+    "state": "directory"
 }

changed: [AlessandroTambellini-3]

TASK [pinger : pinger config] **************************************************
--- before
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmpf08a5hi_/pinger.conf.j2
@@ -0,0 +1,3 @@
+database_url=http://AlessandroTambellini-3:8086
+database_name=latency
+targets=ns-1.rabix.io,ns-2.rabix.io

changed: [AlessandroTambellini-3]

TASK [pinger : pinger script] **************************************************
--- before
+++ after: /home/alessandro/repos/ica0002/roles/pinger/files/pinger.sh
@@ -0,0 +1,30 @@
+#!/bin/bash
+
+for t in database_url database_name targets; do
+  if ! grep -q "^${t}=" /etc/pinger/pinger.conf; then
+    logger "$0 Failed to get $t from config"
+    exit 1
+  fi
+done
+
+which fping > /dev/null || (logger "fping not found"; exit 1)
+
+db_url=$(grep "^database_url=" /etc/pinger/pinger.conf | sed 's/^.*=//' | sed 's/ //g') # remove empty spaces
+db_name=$(grep "^database_name=" /etc/pinger/pinger.conf | sed 's/^.*=//' | sed 's/[^A-Za-z0-9+\/]//g') # allowed just base64 chars
+targets=$(grep "^targets=" /etc/pinger/pinger.conf | sed 's/^.*=//' | sed 's/\(,\|;\)/ /g')
+
+sanitize_url() {
+    sanitized_url=${1// /%20}
+    echo "$sanitized_url"
+}
+
+sanitized_db_url=$(sanitize_url "$db_url")
+# base64_db_name=$(echo $db_name | base64)
+
+curl -i -XPOST "${sanitized_db_url}/query" --data-urlencode "q=CREATE DATABASE $db_name" 1>/dev/null 2>/dev/null
+
+while true; do
+  result=$(fping -C1 -q $targets 2>&1 | awk '{print "rtt,dst="$1" rtt="$3}')
+  curl -i -XPOST "${db_url}/write?db=$db_name" --data-binary "$result"
+ sleep 1
+done

changed: [AlessandroTambellini-3]

TASK [pinger : ping service config] ********************************************
--- before
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmpwco9pd43/pinger.service.j2
@@ -0,0 +1,11 @@
+[Unit]
+Description=Pinger Service
+Documentation=https://docs.influxdata.com/influxdb/v1/
+After=network-online.target
+
+[Service]
+User=pinger
+ExecStart=/usr/local/bin/pinger
+
+[Install]
+WantedBy=multi-user.target

changed: [AlessandroTambellini-3]

TASK [pinger : Ensure pinger is running] ***************************************
changed: [AlessandroTambellini-3]

RUNNING HANDLER [pinger : Restart pinger] **************************************
changed: [AlessandroTambellini-3]

PLAY [Prometheus server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-3]

TASK [prometheus : Install Prometheus] *****************************************
The following additional packages will be installed:
  fonts-glyphicons-halflings javascript-common libc-ares2 libjs-bootstrap
  libjs-bootstrap4 libjs-d3 libjs-eonasdan-bootstrap-datetimepicker
  libjs-jquery libjs-jquery-hotkeys libjs-moment libjs-moment-timezone
  libjs-mustache libjs-popper.js libjs-rickshaw libnode64 node-jquery nodejs
  nodejs-doc
Suggested packages:
  apache2 | lighttpd | httpd npm
The following NEW packages will be installed:
  fonts-glyphicons-halflings javascript-common libc-ares2 libjs-bootstrap
  libjs-bootstrap4 libjs-d3 libjs-eonasdan-bootstrap-datetimepicker
  libjs-jquery libjs-jquery-hotkeys libjs-moment libjs-moment-timezone
  libjs-mustache libjs-popper.js libjs-rickshaw libnode64 node-jquery nodejs
  nodejs-doc prometheus
0 upgraded, 19 newly installed, 0 to remove and 265 not upgraded.
changed: [AlessandroTambellini-3]

TASK [prometheus : Prometheus args] ********************************************
--- before: /etc/default/prometheus
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmpur7gutff/prometheus.j2
@@ -1,57 +1 @@
-# Set the command-line arguments to pass to the server.
-ARGS=""
-
-# Prometheus supports the following options:
-#  --config.file="/etc/prometheus/prometheus.yml"
-#                             Prometheus configuration file path.
-#  --web.listen-address="0.0.0.0:9090"
-#                             Address to listen on for UI, API, and telemetry.
-#  --web.read-timeout=5m      Maximum duration before timing out read of the
-#                             request, and closing idle connections.
-#  --web.max-connections=512  Maximum number of simultaneous connections.
-#  --web.external-url=<URL>   The URL under which Prometheus is externally
-#                             reachable (for example, if Prometheus is served
-#                             via a reverse proxy). Used for generating
-#                             relative and absolute links back to Prometheus
-#                             itself. If the URL has a path portion, it will
-#                             be used to prefix all HTTP endpoints served by
-#                             Prometheus. If omitted, relevant URL components
-#                             will be derived automatically.
-#  --web.route-prefix=<path>  Prefix for the internal routes of web endpoints.
-#                             Defaults to path of --web.external-url.
-#  --web.local-assets="/usr/share/prometheus/web/"
-#                             Path to static asset/templates directory.
-#  --web.user-assets=<path>   Path to static asset directory, available at
-#                             /user.
-#  --web.enable-lifecycle     Enable shutdown and reload via HTTP request.
-#  --web.enable-admin-api     Enables API endpoints for admin control actions.
-#  --web.console.templates="/etc/prometheus/consoles"
-#                             Path to the console template directory,
-#                             available at /consoles.
-#  --web.console.libraries="/etc/prometheus/console_libraries"
-#                             Path to the console library directory.
-#  --storage.tsdb.path="/var/lib/prometheus/metrics2/"
-#                             Base path for metrics storage.
-#  --storage.tsdb.min-block-duration=2h
-#                             Minimum duration of a data block before being
-#                             persisted.
-#  --storage.tsdb.max-block-duration=<duration>
-#                             Maximum duration compacted blocks may span.
-#                             (Defaults to 10% of the retention period)
-#  --storage.tsdb.retention=15d
-#                             How long to retain samples in the storage.
-#  --storage.tsdb.use-lockfile
-#                             Create a lockfile in data directory.
-#  --alertmanager.notification-queue-capacity=10000
-#                             The capacity of the queue for pending alert
-#                             manager notifications.
-#  --alertmanager.timeout=10s
-#                             Timeout for sending alerts to Alertmanager.
-#  --query.lookback-delta=5m  The delta difference allowed for retrieving
-#                             metrics during expression evaluations.
-#  --query.timeout=2m         Maximum time a query may take before being
-#                             aborted.
-#  --query.max-concurrency=20
-#                             Maximum number of queries executed concurrently.
-#  --log.level=info           Only log messages with the given severity or
-#                             above. One of: [debug, info, warn, error]
+ARGS="--web.external-url=http://193.40.156.67:15180/prometheus"

changed: [AlessandroTambellini-3]

TASK [prometheus : Configure Prometheus] ***************************************
--- before: /etc/prometheus/prometheus.yml
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmpoe_37923/prometheus.yml.j2
@@ -1,44 +1,60 @@
-# Sample config for Prometheus.
+global:
+  scrape_interval: 15s
+  evaluation_interval: 15s
 
-global:
-  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
-  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
-  # scrape_timeout is set to the global default (10s).
+scrape_configs:
+  - job_name: 'prometheus'
+    static_configs:
+      - targets: ["localhost:9090"]
+    metrics_path: '/prometheus/metrics'
 
-  # Attach these labels to any time series or alerts when communicating with
-  # external systems (federation, remote storage, Alertmanager).
-  external_labels:
-      monitor: 'example'
+  - job_name: 'linux'
+    static_configs:
+    - targets:
+      - AlessandroTambellini-1:9100
+      - AlessandroTambellini-2:9100
+      - AlessandroTambellini-3:9100
+    metrics_path: '/metrics'
 
-# Alertmanager configuration
-alerting:
-  alertmanagers:
-  - static_configs:
-    - targets: ['localhost:9093']
+  - job_name: 'bind9'
+    static_configs:
+    - targets:
+      - ns-3:9119
+      - ns-1:9119
+      - ns-2:9119
+    metrics_path: '/metrics'
 
-# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
-rule_files:
-  # - "first_rules.yml"
-  # - "second_rules.yml"
+  - job_name: 'nginx'
+    static_configs:
+    - targets:
+      - nginx-3:9113
+    metrics_path: '/metrics'
 
-# A scrape configuration containing exactly one endpoint to scrape:
-# Here it's Prometheus itself.
-scrape_configs:
-  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
-  - job_name: 'prometheus'
+  - job_name: 'mysql'
+    static_configs:
+    - targets:
+      - mysql-1:9104
+      - mysql-2:9104
+    metrics_path: '/metrics'
 
-    # Override the global default and scrape targets from this job every 5 seconds.
-    scrape_interval: 5s
-    scrape_timeout: 5s
+  - job_name: 'influxdb'
+    static_configs:
+    - targets:
+      - influxdb:9424 # in case of more than one influxdb server, round robin technique is applied
+    metrics_path: '/metrics'
 
-    # metrics_path defaults to '/metrics'
-    # scheme defaults to 'http'.
+  - job_name: 'haproxy'
+    static_configs:
+    - targets:
+      - lb-1:9101
+      - lb-2:9101
+    metrics_path: '/metrics'
 
+  - job_name: 'keepalived'
     static_configs:
-      - targets: ['localhost:9090']
+    - targets:
+      - ka-1:9165
+      - ka-2:9165
+    metrics_path: '/metrics'
 
-  - job_name: node
-    # If prometheus-node-exporter is installed, grab stats about the local
-    # machine by default.
-    static_configs:
-      - targets: ['localhost:9100']
+

changed: [AlessandroTambellini-3]

TASK [prometheus : Ensure Prometheus service is started] ***********************
ok: [AlessandroTambellini-3]

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for prometheus server] *********************
changed: [AlessandroTambellini-3]

RUNNING HANDLER [prometheus : Restart prometheus] ******************************
changed: [AlessandroTambellini-3]

PLAY [Grafana server] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-3]

TASK [grafana : Grafana directory] *********************************************
--- before
+++ after
@@ -1,4 +1,4 @@
 {
     "path": "/opt/grafana/provisioning/dashboards",
-    "state": "absent"
+    "state": "directory"
 }

changed: [AlessandroTambellini-3] => (item=dashboards)
--- before
+++ after
@@ -1,4 +1,4 @@
 {
     "path": "/opt/grafana/provisioning/datasources",
-    "state": "absent"
+    "state": "directory"
 }

changed: [AlessandroTambellini-3] => (item=datasources)

TASK [grafana : Grafana configuration] *****************************************
changed: [AlessandroTambellini-3]

TASK [grafana : Add datasources] ***********************************************
--- before
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmpdlbn5hlq/datasources.yaml
@@ -0,0 +1,20 @@
+# Configuration file version
+apiVersion: 1
+
+# List of data sources to insert/update depending on what's
+# available in the database.
+datasources:
+    - name: Prometheus-1
+      type: prometheus
+      access: proxy
+      url: "http://prometheus:9090/prometheus"
+    - name: influxdb:latency
+      type: influxdb
+      access: proxy
+      url: "http://influxdb:8086"
+      database: latency
+    - name: influxdb:telegraf
+      type: influxdb
+      access: proxy
+      url: "http://influxdb:8086"
+      database: telegraf

changed: [AlessandroTambellini-3]

TASK [grafana : dashboards files] **********************************************
--- before
+++ after: /home/alessandro/repos/ica0002/roles/grafana/files/datasources.conf.yaml
@@ -0,0 +1,10 @@
+apiVersion: 1
+
+providers:
+  - name: "default"
+    orgId: 1
+    folder: ""
+    folderUid: ""
+    type: file
+    options:
+      path: /etc/grafana/provisioning/dashboards # changed from /var/lib/grafana/dashboards

changed: [AlessandroTambellini-3] => (item=datasources.conf.yaml)
--- before
+++ after: /home/alessandro/repos/ica0002/roles/grafana/files/main.json
@@ -0,0 +1,1291 @@
+{
+    "annotations": {
+        "list": [
+            {
+                "builtIn": 1,
+                "datasource": {
+                    "type": "grafana",
+                    "uid": "-- Grafana --"
+                },
+                "enable": true,
+                "hide": true,
+                "iconColor": "rgba(0, 211, 255, 1)",
+                "name": "Annotations & Alerts",
+                "type": "dashboard"
+            }
+        ]
+    },
+    "editable": true,
+    "fiscalYearStartMonth": 0,
+    "graphTooltip": 0,
+    "links": [],
+    "liveNow": false,
+    "panels": [
+        {
+            "datasource": {
+                "type": "prometheus",
+                "uid": "PF8CB2B50324B125B"
+            },
+            "fieldConfig": {
+                "defaults": {
+                    "color": {
+                        "mode": "thresholds"
+                    },
+                    "mappings": [
+                        {
+                            "options": {
+                                "0": {
+                                    "index": 1,
+                                    "text": ":("
+                                },
+                                "1": {
+                                    "index": 0,
+                                    "text": "UP"
+                                }
+                            },
+                            "type": "value"
+                        }
+                    ],
+                    "thresholds": {
+                        "mode": "absolute",
+                        "steps": [
+                            {
+                                "color": "red",
+                                "value": null
+                            },
+                            {
+                                "color": "green",
+                                "value": 0.5
+                            }
+                        ]
+                    }
+                },
+                "overrides": []
+            },
+            "gridPos": {
+                "h": 6,
+                "w": 3,
+                "x": 0,
+                "y": 0
+            },
+            "id": 11,
+            "options": {
+                "colorMode": "value",
+                "graphMode": "none",
+                "justifyMode": "auto",
+                "orientation": "auto",
+                "reduceOptions": {
+                    "calcs": ["lastNotNull"],
+                    "fields": "",
+                    "values": false
+                },
+                "textMode": "auto",
+                "wideLayout": true
+            },
+            "pluginVersion": "10.2.3",
+            "targets": [
+                {
+                    "datasource": {
+                        "type": "prometheus",
+                        "uid": "PF8CB2B50324B125B"
+                    },
+                    "editorMode": "code",
+                    "expr": "influxdb_exporter_stats_query_success",
+                    "instant": false,
+                    "legendFormat": "__auto",
+                    "range": true,
+                    "refId": "A"
+                }
+            ],
+            "title": "InfluxDB Health",
+            "type": "stat"
+        },
+        {
+            "datasource": {
+                "type": "prometheus",
+                "uid": "PF8CB2B50324B125B"
+            },
+            "fieldConfig": {
+                "defaults": {
+                    "color": {
+                        "mode": "thresholds"
+                    },
+                    "mappings": [
+                        {
+                            "options": {
+                                "0": {
+                                    "index": 1,
+                                    "text": ":("
+                                },
+                                "1": {
+                                    "index": 0,
+                                    "text": "UP"
+                                }
+                            },
+                            "type": "value"
+                        }
+                    ],
+                    "thresholds": {
+                        "mode": "absolute",
+                        "steps": [
+                            {
+                                "color": "red",
+                                "value": null
+                            },
+                            {
+                                "color": "green",
+                                "value": 0.5
+                            }
+                        ]
+                    }
+                },
+                "overrides": []
+            },
+            "gridPos": {
+                "h": 6,
+                "w": 3,
+                "x": 3,
+                "y": 0
+            },
+            "id": 7,
+            "options": {
+                "colorMode": "value",
+                "graphMode": "none",
+                "justifyMode": "auto",
+                "orientation": "auto",
+                "reduceOptions": {
+                    "calcs": ["lastNotNull"],
+                    "fields": "",
+                    "values": false
+                },
+                "textMode": "auto",
+                "wideLayout": true
+            },
+            "pluginVersion": "10.2.3",
+            "targets": [
+                {
+                    "datasource": {
+                        "type": "prometheus",
+                        "uid": "PF8CB2B50324B125B"
+                    },
+                    "editorMode": "code",
+                    "expr": "nginx_up",
+                    "instant": false,
+                    "legendFormat": "{{ instance }}",
+                    "range": true,
+                    "refId": "A"
+                }
+            ],
+            "title": "nginx",
+            "type": "stat"
+        },
+        {
+            "datasource": {
+                "type": "prometheus",
+                "uid": "PF8CB2B50324B125B"
+            },
+            "fieldConfig": {
+                "defaults": {
+                    "color": {
+                        "mode": "thresholds"
+                    },
+                    "mappings": [
+                        {
+                            "options": {
+                                "0": {
+                                    "index": 1,
+                                    "text": ":("
+                                },
+                                "1": {
+                                    "index": 0,
+                                    "text": "UP"
+                                }
+                            },
+                            "type": "value"
+                        }
+                    ],
+                    "thresholds": {
+                        "mode": "absolute",
+                        "steps": [
+                            {
+                                "color": "red",
+                                "value": null
+                            },
+                            {
+                                "color": "green",
+                                "value": 0.5
+                            }
+                        ]
+                    }
+                },
+                "overrides": []
+            },
+            "gridPos": {
+                "h": 6,
+                "w": 6,
+                "x": 6,
+                "y": 0
+            },
+            "id": 2,
+            "options": {
+                "colorMode": "value",
+                "graphMode": "none",
+                "justifyMode": "auto",
+                "orientation": "auto",
+                "reduceOptions": {
+                    "calcs": ["lastNotNull"],
+                    "fields": "",
+                    "values": false
+                },
+                "textMode": "auto",
+                "wideLayout": true
+            },
+            "pluginVersion": "10.2.3",
+            "targets": [
+                {
+                    "datasource": {
+                        "type": "prometheus",
+                        "uid": "PF8CB2B50324B125B"
+                    },
+                    "editorMode": "code",
+                    "expr": "bind_up",
+                    "instant": false,
+                    "legendFormat": "{{ instance }}",
+                    "range": true,
+                    "refId": "A"
+                }
+            ],
+            "title": "Bind",
+            "type": "stat"
+        },
+        {
+            "datasource": {
+                "type": "prometheus",
+                "uid": "PF8CB2B50324B125B"
+            },
+            "fieldConfig": {
+                "defaults": {
+                    "color": {
+                        "mode": "thresholds"
+                    },
+                    "mappings": [
+                        {
+                            "options": {
+                                "0": {
+                                    "index": 1,
+                                    "text": ":("
+                                },
+                                "1": {
+                                    "index": 0,
+                                    "text": "UP"
+                                }
+                            },
+                            "type": "value"
+                        }
+                    ],
+                    "thresholds": {
+                        "mode": "absolute",
+                        "steps": [
+                            {
+                                "color": "red",
+                                "value": null
+                            },
+                            {
+                                "color": "green",
+                                "value": 0.5
+                            }
+                        ]
+                    }
+                },
+                "overrides": []
+            },
+            "gridPos": {
+                "h": 6,
+                "w": 12,
+                "x": 12,
+                "y": 0
+            },
+            "id": 14,
+            "options": {
+                "colorMode": "value",
+                "graphMode": "none",
+                "justifyMode": "auto",
+                "orientation": "auto",
+                "reduceOptions": {
+                    "calcs": ["lastNotNull"],
+                    "fields": "",
+                    "values": false
+                },
+                "textMode": "auto",
+                "wideLayout": true
+            },
+            "pluginVersion": "10.2.3",
+            "targets": [
+                {
+                    "datasource": {
+                        "type": "prometheus",
+                        "uid": "PF8CB2B50324B125B"
+                    },
+                    "editorMode": "code",
+                    "expr": "haproxy_server_up",
+                    "instant": false,
+                    "legendFormat": "{{ instance }}",
+                    "range": true,
+                    "refId": "A"
+                }
+            ],
+            "title": "HAProxy server",
+            "type": "stat"
+        },
+        {
+            "datasource": {
+                "type": "prometheus",
+                "uid": "PF8CB2B50324B125B"
+            },
+            "fieldConfig": {
+                "defaults": {
+                    "color": {
+                        "mode": "thresholds"
+                    },
+                    "mappings": [
+                        {
+                            "options": {
+                                "0": {
+                                    "index": 1,
+                                    "text": ":("
+                                },
+                                "1": {
+                                    "index": 0,
+                                    "text": "UP"
+                                }
+                            },
+                            "type": "value"
+                        }
+                    ],
+                    "thresholds": {
+                        "mode": "absolute",
+                        "steps": [
+                            {
+                                "color": "red",
+                                "value": null
+                            },
+                            {
+                                "color": "green",
+                                "value": 0.5
+                            }
+                        ]
+                    }
+                },
+                "overrides": []
+            },
+            "gridPos": {
+                "h": 6,
+                "w": 5,
+                "x": 0,
+                "y": 6
+            },
+            "id": 13,
+            "options": {
+                "colorMode": "value",
+                "graphMode": "none",
+                "justifyMode": "auto",
+                "orientation": "auto",
+                "reduceOptions": {
+                    "calcs": ["lastNotNull"],
+                    "fields": "",
+                    "values": false
+                },
+                "text": {},
+                "textMode": "auto",
+                "wideLayout": true
+            },
+            "pluginVersion": "10.2.3",
+            "targets": [
+                {
+                    "datasource": {
+                        "type": "prometheus",
+                        "uid": "PF8CB2B50324B125B"
+                    },
+                    "editorMode": "code",
+                    "expr": "haproxy_up",
+                    "instant": false,
+                    "legendFormat": "{{ instance }}",
+                    "range": true,
+                    "refId": "A"
+                }
+            ],
+            "title": "HAProxy",
+            "type": "stat"
+        },
+        {
+            "datasource": {
+                "type": "prometheus",
+                "uid": "PF8CB2B50324B125B"
+            },
+            "fieldConfig": {
+                "defaults": {
+                    "color": {
+                        "mode": "thresholds"
+                    },
+                    "mappings": [
+                        {
+                            "options": {
+                                "0": {
+                                    "index": 1,
+                                    "text": ":("
+                                },
+                                "1": {
+                                    "index": 0,
+                                    "text": "UP"
+                                }
+                            },
+                            "type": "value"
+                        }
+                    ],
+                    "thresholds": {
+                        "mode": "absolute",
+                        "steps": [
+                            {
+                                "color": "red",
+                                "value": null
+                            },
+                            {
+                                "color": "green",
+                                "value": 0.5
+                            }
+                        ]
+                    }
+                },
+                "overrides": []
+            },
+            "gridPos": {
+                "h": 6,
+                "w": 6,
+                "x": 5,
+                "y": 6
+            },
+            "id": 5,
+            "options": {
+                "colorMode": "value",
+                "graphMode": "none",
+                "justifyMode": "auto",
+                "orientation": "auto",
+                "reduceOptions": {
+                    "calcs": ["lastNotNull"],
+                    "fields": "",
+                    "values": false
+                },
+                "textMode": "auto",
+                "wideLayout": true
+            },
+            "pluginVersion": "10.2.3",
+            "targets": [
+                {
+                    "datasource": {
+                        "type": "prometheus",
+                        "uid": "PF8CB2B50324B125B"
+                    },
+                    "editorMode": "code",
+                    "expr": "mysql_up",
+                    "instant": false,
+                    "legendFormat": "{{ instance }}",
+                    "range": true,
+                    "refId": "A"
+                }
+            ],
+            "title": "MySQL",
+            "type": "stat"
+        },
+        {
+            "datasource": {
+                "type": "prometheus",
+                "uid": "PF8CB2B50324B125B"
+            },
+            "fieldConfig": {
+                "defaults": {
+                    "color": {
+                        "mode": "thresholds"
+                    },
+                    "mappings": [
+                        {
+                            "options": {
+                                "0": {
+                                    "index": 2,
+                                    "text": ":("
+                                },
+                                "1": {
+                                    "index": 1,
+                                    "text": "B"
+                                },
+                                "2": {
+                                    "index": 0,
+                                    "text": "M"
+                                }
+                            },
+                            "type": "value"
+                        }
+                    ],
+                    "thresholds": {
+                        "mode": "absolute",
+                        "steps": [
+                            {
+                                "color": "red",
+                                "value": null
+                            },
+                            {
+                                "color": "purple",
+                                "value": 1
+                            },
+                            {
+                                "color": "green",
+                                "value": 2
+                            }
+                        ]
+                    }
+                },
+                "overrides": []
+            },
+            "gridPos": {
+                "h": 6,
+                "w": 5,
+                "x": 11,
+                "y": 6
+            },
+            "id": 15,
+            "options": {
+                "colorMode": "value",
+                "graphMode": "none",
+                "justifyMode": "auto",
+                "orientation": "auto",
+                "reduceOptions": {
+                    "calcs": ["lastNotNull"],
+                    "fields": "",
+                    "values": false
+                },
+                "textMode": "auto",
+                "wideLayout": true
+            },
+            "pluginVersion": "10.2.3",
+            "targets": [
+                {
+                    "datasource": {
+                        "type": "prometheus",
+                        "uid": "PF8CB2B50324B125B"
+                    },
+                    "editorMode": "code",
+                    "expr": "keepalived_vrrp_state",
+                    "format": "time_series",
+                    "instant": false,
+                    "legendFormat": "{{ instance }}",
+                    "range": true,
+                    "refId": "A"
+                }
+            ],
+            "title": "keepalived vrrp state",
+            "type": "stat"
+        },
+        {
+            "datasource": {
+                "type": "prometheus",
+                "uid": "PF8CB2B50324B125B"
+            },
+            "fieldConfig": {
+                "defaults": {
+                    "color": {
+                        "mode": "palette-classic"
+                    },
+                    "custom": {
+                        "axisBorderShow": false,
+                        "axisCenteredZero": false,
+                        "axisColorMode": "text",
+                        "axisLabel": "",
+                        "axisPlacement": "auto",
+                        "barAlignment": 0,
+                        "drawStyle": "line",
+                        "fillOpacity": 0,
+                        "gradientMode": "none",
+                        "hideFrom": {
+                            "legend": false,
+                            "tooltip": false,
+                            "viz": false
+                        },
+                        "insertNulls": false,
+                        "lineInterpolation": "linear",
+                        "lineWidth": 1,
+                        "pointSize": 5,
+                        "scaleDistribution": {
+                            "type": "linear"
+                        },
+                        "showPoints": "auto",
+                        "spanNulls": false,
+                        "stacking": {
+                            "group": "A",
+                            "mode": "none"
+                        },
+                        "thresholdsStyle": {
+                            "mode": "off"
+                        }
+                    },
+                    "mappings": [],
+                    "thresholds": {
+                        "mode": "absolute",
+                        "steps": [
+                            {
+                                "color": "green",
+                                "value": null
+                            },
+                            {
+                                "color": "red",
+                                "value": 80
+                            }
+                        ]
+                    }
+                },
+                "overrides": []
+            },
+            "gridPos": {
+                "h": 6,
+                "w": 8,
+                "x": 16,
+                "y": 6
+            },
+            "id": 12,
+            "options": {
+                "legend": {
+                    "calcs": [],
+                    "displayMode": "list",
+                    "placement": "bottom",
+                    "showLegend": true
+                },
+                "tooltip": {
+                    "mode": "single",
+                    "sort": "none"
+                }
+            },
+            "targets": [
+                {
+                    "datasource": {
+                        "type": "prometheus",
+                        "uid": "PF8CB2B50324B125B"
+                    },
+                    "editorMode": "code",
+                    "expr": "influxdb_write_write_ok",
+                    "instant": false,
+                    "legendFormat": "{{ instance }}",
+                    "range": true,
+                    "refId": "A"
+                }
+            ],
+            "title": "InfluxDB write rate",
+            "type": "timeseries"
+        },
+        {
+            "datasource": {
+                "type": "prometheus",
+                "uid": "PF8CB2B50324B125B"
+            },
+            "fieldConfig": {
+                "defaults": {
+                    "color": {
+                        "mode": "palette-classic"
+                    },
+                    "custom": {
+                        "axisBorderShow": false,
+                        "axisCenteredZero": false,
+                        "axisColorMode": "text",
+                        "axisLabel": "",
+                        "axisPlacement": "auto",
+                        "barAlignment": 0,
+                        "drawStyle": "line",
+                        "fillOpacity": 0,
+                        "gradientMode": "none",
+                        "hideFrom": {
+                            "legend": false,
+                            "tooltip": false,
+                            "viz": false
+                        },
+                        "insertNulls": false,
+                        "lineInterpolation": "linear",
+                        "lineWidth": 1,
+                        "pointSize": 5,
+                        "scaleDistribution": {
+                            "type": "linear"
+                        },
+                        "showPoints": "auto",
+                        "spanNulls": false,
+                        "stacking": {
+                            "group": "A",
+                            "mode": "none"
+                        },
+                        "thresholdsStyle": {
+                            "mode": "off"
+                        }
+                    },
+                    "mappings": [],
+                    "thresholds": {
+                        "mode": "absolute",
+                        "steps": [
+                            {
+                                "color": "green",
+                                "value": null
+                            },
+                            {
+                                "color": "red",
+                                "value": 80
+                            }
+                        ]
+                    }
+                },
+                "overrides": []
+            },
+            "gridPos": {
+                "h": 7,
+                "w": 8,
+                "x": 0,
+                "y": 12
+            },
+            "id": 8,
+            "options": {
+                "legend": {
+                    "calcs": [],
+                    "displayMode": "list",
+                    "placement": "bottom",
+                    "showLegend": true
+                },
+                "tooltip": {
+                    "mode": "single",
+                    "sort": "none"
+                }
+            },
+            "targets": [
+                {
+                    "datasource": {
+                        "type": "prometheus",
+                        "uid": "PF8CB2B50324B125B"
+                    },
+                    "editorMode": "code",
+                    "expr": "rate(node_cpu_seconds_total{mode=\"idle\"}[1m])",
+                    "instant": false,
+                    "legendFormat": "{{ instance }}",
+                    "range": true,
+                    "refId": "A"
+                }
+            ],
+            "title": "CPU load",
+            "type": "timeseries"
+        },
+        {
+            "datasource": {
+                "type": "prometheus",
+                "uid": "PF8CB2B50324B125B"
+            },
+            "fieldConfig": {
+                "defaults": {
+                    "color": {
+                        "mode": "palette-classic"
+                    },
+                    "custom": {
+                        "axisBorderShow": false,
+                        "axisCenteredZero": false,
+                        "axisColorMode": "text",
+                        "axisLabel": "",
+                        "axisPlacement": "auto",
+                        "barAlignment": 0,
+                        "drawStyle": "line",
+                        "fillOpacity": 0,
+                        "gradientMode": "none",
+                        "hideFrom": {
+                            "legend": false,
+                            "tooltip": false,
+                            "viz": false
+                        },
+                        "insertNulls": false,
+                        "lineInterpolation": "linear",
+                        "lineWidth": 1,
+                        "pointSize": 5,
+                        "scaleDistribution": {
+                            "type": "linear"
+                        },
+                        "showPoints": "auto",
+                        "spanNulls": false,
+                        "stacking": {
+                            "group": "A",
+                            "mode": "none"
+                        },
+                        "thresholdsStyle": {
+                            "mode": "off"
+                        }
+                    },
+                    "mappings": [],
+                    "thresholds": {
+                        "mode": "absolute",
+                        "steps": [
+                            {
+                                "color": "green",
+                                "value": null
+                            },
+                            {
+                                "color": "red",
+                                "value": 80
+                            }
+                        ]
+                    }
+                },
+                "overrides": []
+            },
+            "gridPos": {
+                "h": 7,
+                "w": 8,
+                "x": 8,
+                "y": 12
+            },
+            "id": 10,
+            "options": {
+                "legend": {
+                    "calcs": [],
+                    "displayMode": "list",
+                    "placement": "bottom",
+                    "showLegend": true
+                },
+                "tooltip": {
+                    "mode": "single",
+                    "sort": "none"
+                }
+            },
+            "targets": [
+                {
+                    "datasource": {
+                        "type": "prometheus",
+                        "uid": "PF8CB2B50324B125B"
+                    },
+                    "editorMode": "code",
+                    "expr": "rate(nginx_http_requests_total[5m])",
+                    "instant": false,
+                    "legendFormat": "{{ instance }} nginx",
+                    "range": true,
+                    "refId": "A"
+                }
+            ],
+            "title": "HTTP requests",
+            "type": "timeseries"
+        },
+        {
+            "datasource": {
+                "type": "influxdb",
+                "uid": "PB54018EEE073B123"
+            },
+            "fieldConfig": {
+                "defaults": {
+                    "color": {
+                        "mode": "palette-classic"
+                    },
+                    "custom": {
+                        "axisBorderShow": false,
+                        "axisCenteredZero": false,
+                        "axisColorMode": "text",
+                        "axisLabel": "",
+                        "axisPlacement": "auto",
+                        "barAlignment": 0,
+                        "drawStyle": "line",
+                        "fillOpacity": 0,
+                        "gradientMode": "none",
+                        "hideFrom": {
+                            "legend": false,
+                            "tooltip": false,
+                            "viz": false
+                        },
+                        "insertNulls": false,
+                        "lineInterpolation": "linear",
+                        "lineWidth": 1,
+                        "pointSize": 5,
+                        "scaleDistribution": {
+                            "type": "linear"
+                        },
+                        "showPoints": "auto",
+                        "spanNulls": false,
+                        "stacking": {
+                            "group": "A",
+                            "mode": "none"
+                        },
+                        "thresholdsStyle": {
+                            "mode": "off"
+                        }
+                    },
+                    "mappings": [],
+                    "thresholds": {
+                        "mode": "absolute",
+                        "steps": [
+                            {
+                                "color": "green",
+                                "value": null
+                            },
+                            {
+                                "color": "red",
+                                "value": 80
+                            }
+                        ]
+                    }
+                },
+                "overrides": []
+            },
+            "gridPos": {
+                "h": 7,
+                "w": 8,
+                "x": 16,
+                "y": 12
+            },
+            "id": 9,
+            "options": {
+                "legend": {
+                    "calcs": [],
+                    "displayMode": "list",
+                    "placement": "bottom",
+                    "showLegend": true
+                },
+                "tooltip": {
+                    "mode": "single",
+                    "sort": "none"
+                }
+            },
+            "targets": [
+                {
+                    "datasource": {
+                        "type": "influxdb",
+                        "uid": "PB54018EEE073B123"
+                    },
+                    "groupBy": [
+                        {
+                            "params": ["$__interval"],
+                            "type": "time"
+                        },
+                        {
+                            "params": ["null"],
+                            "type": "fill"
+                        }
+                    ],
+                    "measurement": "rtt",
+                    "orderByTime": "ASC",
+                    "policy": "default",
+                    "refId": "A",
+                    "resultFormat": "time_series",
+                    "select": [
+                        [
+                            {
+                                "params": ["*"],
+                                "type": "field"
+                            },
+                            {
+                                "params": [],
+                                "type": "mean"
+                            }
+                        ]
+                    ],
+                    "tags": []
+                }
+            ],
+            "title": "latency (pinger)",
+            "type": "timeseries"
+        },
+        {
+            "datasource": {
+                "type": "prometheus",
+                "uid": "PF8CB2B50324B125B"
+            },
+            "fieldConfig": {
+                "defaults": {
+                    "color": {
+                        "mode": "palette-classic"
+                    },
+                    "custom": {
+                        "axisBorderShow": false,
+                        "axisCenteredZero": false,
+                        "axisColorMode": "text",
+                        "axisLabel": "",
+                        "axisPlacement": "auto",
+                        "barAlignment": 0,
+                        "drawStyle": "line",
+                        "fillOpacity": 0,
+                        "gradientMode": "none",
+                        "hideFrom": {
+                            "legend": false,
+                            "tooltip": false,
+                            "viz": false
+                        },
+                        "insertNulls": false,
+                        "lineInterpolation": "linear",
+                        "lineWidth": 1,
+                        "pointSize": 5,
+                        "scaleDistribution": {
+                            "type": "linear"
+                        },
+                        "showPoints": "auto",
+                        "spanNulls": false,
+                        "stacking": {
+                            "group": "A",
+                            "mode": "none"
+                        },
+                        "thresholdsStyle": {
+                            "mode": "off"
+                        }
+                    },
+                    "mappings": [],
+                    "thresholds": {
+                        "mode": "absolute",
+                        "steps": [
+                            {
+                                "color": "green",
+                                "value": null
+                            },
+                            {
+                                "color": "red",
+                                "value": 80
+                            }
+                        ]
+                    }
+                },
+                "overrides": []
+            },
+            "gridPos": {
+                "h": 6,
+                "w": 8,
+                "x": 0,
+                "y": 19
+            },
+            "id": 6,
+            "options": {
+                "legend": {
+                    "calcs": [],
+                    "displayMode": "list",
+                    "placement": "bottom",
+                    "showLegend": true
+                },
+                "tooltip": {
+                    "mode": "single",
+                    "sort": "none"
+                }
+            },
+            "targets": [
+                {
+                    "datasource": {
+                        "type": "prometheus",
+                        "uid": "PF8CB2B50324B125B"
+                    },
+                    "editorMode": "code",
+                    "expr": "rate(mysql_global_status_commands_total[5m])",
+                    "instant": false,
+                    "legendFormat": "__auto",
+                    "range": true,
+                    "refId": "A"
+                }
+            ],
+            "title": "MySQL selects per minute",
+            "type": "timeseries"
+        },
+        {
+            "datasource": {
+                "type": "prometheus",
+                "uid": "PF8CB2B50324B125B"
+            },
+            "fieldConfig": {
+                "defaults": {
+                    "color": {
+                        "mode": "palette-classic"
+                    },
+                    "custom": {
+                        "axisBorderShow": false,
+                        "axisCenteredZero": false,
+                        "axisColorMode": "text",
+                        "axisLabel": "",
+                        "axisPlacement": "auto",
+                        "barAlignment": 0,
+                        "drawStyle": "line",
+                        "fillOpacity": 0,
+                        "gradientMode": "none",
+                        "hideFrom": {
+                            "legend": false,
+                            "tooltip": false,
+                            "viz": false
+                        },
+                        "insertNulls": false,
+                        "lineInterpolation": "linear",
+                        "lineWidth": 1,
+                        "pointSize": 5,
+                        "scaleDistribution": {
+                            "type": "linear"
+                        },
+                        "showPoints": "auto",
+                        "spanNulls": false,
+                        "stacking": {
+                            "group": "A",
+                            "mode": "none"
+                        },
+                        "thresholdsStyle": {
+                            "mode": "off"
+                        }
+                    },
+                    "mappings": [],
+                    "thresholds": {
+                        "mode": "absolute",
+                        "steps": [
+                            {
+                                "color": "green",
+                                "value": null
+                            },
+                            {
+                                "color": "red",
+                                "value": 80
+                            }
+                        ]
+                    }
+                },
+                "overrides": []
+            },
+            "gridPos": {
+                "h": 6,
+                "w": 8,
+                "x": 8,
+                "y": 19
+            },
+            "id": 3,
+            "options": {
+                "legend": {
+                    "calcs": [],
+                    "displayMode": "list",
+                    "placement": "bottom",
+                    "showLegend": true
+                },
+                "tooltip": {
+                    "mode": "single",
+                    "sort": "none"
+                }
+            },
+            "targets": [
+                {
+                    "datasource": {
+                        "type": "prometheus",
+                        "uid": "PF8CB2B50324B125B"
+                    },
+                    "editorMode": "code",
+                    "expr": "node_memory_MemTotal_bytes - (node_memory_MemFree_bytes + node_memory_Buffers_bytes + node_memory_Cached_bytes)",
+                    "instant": false,
+                    "legendFormat": "{{ instance }}",
+                    "range": true,
+                    "refId": "A"
+                }
+            ],
+            "title": "Memory consumption",
+            "type": "timeseries"
+        },
+        {
+            "datasource": {
+                "type": "prometheus",
+                "uid": "PF8CB2B50324B125B"
+            },
+            "fieldConfig": {
+                "defaults": {
+                    "color": {
+                        "mode": "palette-classic"
+                    },
+                    "custom": {
+                        "axisBorderShow": false,
+                        "axisCenteredZero": false,
+                        "axisColorMode": "text",
+                        "axisLabel": "",
+                        "axisPlacement": "auto",
+                        "barAlignment": 0,
+                        "drawStyle": "line",
+                        "fillOpacity": 0,
+                        "gradientMode": "none",
+                        "hideFrom": {
+                            "legend": false,
+                            "tooltip": false,
+                            "viz": false
+                        },
+                        "insertNulls": false,
+                        "lineInterpolation": "linear",
+                        "lineWidth": 1,
+                        "pointSize": 5,
+                        "scaleDistribution": {
+                            "type": "linear"
+                        },
+                        "showPoints": "auto",
+                        "spanNulls": false,
+                        "stacking": {
+                            "group": "A",
+                            "mode": "none"
+                        },
+                        "thresholdsStyle": {
+                            "mode": "off"
+                        }
+                    },
+                    "mappings": [],
+                    "thresholds": {
+                        "mode": "absolute",
+                        "steps": [
+                            {
+                                "color": "green",
+                                "value": null
+                            },
+                            {
+                                "color": "red",
+                                "value": 80
+                            }
+                        ]
+                    }
+                },
+                "overrides": []
+            },
+            "gridPos": {
+                "h": 6,
+                "w": 8,
+                "x": 16,
+                "y": 19
+            },
+            "id": 4,
+            "options": {
+                "legend": {
+                    "calcs": [],
+                    "displayMode": "list",
+                    "placement": "bottom",
+                    "showLegend": true
+                },
+                "tooltip": {
+                    "mode": "single",
+                    "sort": "none"
+                }
+            },
+            "targets": [
+                {
+                    "datasource": {
+                        "type": "prometheus",
+                        "uid": "PF8CB2B50324B125B"
+                    },
+                    "editorMode": "code",
+                    "expr": "rate(bind_resolver_queries_total[5m])",
+                    "instant": false,
+                    "legendFormat": "__auto",
+                    "range": true,
+                    "refId": "A"
+                }
+            ],
+            "title": "DNS queries",
+            "type": "timeseries"
+        }
+    ],
+    "refresh": "5s",
+    "schemaVersion": 39,
+    "tags": [],
+    "templating": {
+        "list": []
+    },
+    "time": {
+        "from": "now-30m",
+        "to": "now"
+    },
+    "timepicker": {},
+    "timezone": "",
+    "title": "Main",
+    "uid": "fbef49f8-789c-49a0-82fc-913c1725e385",
+    "version": 3,
+    "weekStart": ""
+}

changed: [AlessandroTambellini-3] => (item=main.json)
--- before
+++ after: /home/alessandro/repos/ica0002/roles/grafana/files/mysql.json
@@ -0,0 +1,531 @@
+{
+    "annotations": {
+        "list": [
+            {
+                "builtIn": 1,
+                "datasource": {
+                    "type": "grafana",
+                    "uid": "-- Grafana --"
+                },
+                "enable": true,
+                "hide": true,
+                "iconColor": "rgba(0, 211, 255, 1)",
+                "name": "Annotations & Alerts",
+                "type": "dashboard"
+            }
+        ]
+    },
+    "editable": true,
+    "fiscalYearStartMonth": 0,
+    "graphTooltip": 0,
+    "links": [],
+    "liveNow": false,
+    "panels": [
+        {
+            "datasource": {
+                "type": "prometheus",
+                "uid": "PF8CB2B50324B125B"
+            },
+            "fieldConfig": {
+                "defaults": {
+                    "color": {
+                        "mode": "thresholds"
+                    },
+                    "mappings": [
+                        {
+                            "options": {
+                                "0": {
+                                    "index": 1,
+                                    "text": ":("
+                                },
+                                "1": {
+                                    "index": 0,
+                                    "text": "UP"
+                                }
+                            },
+                            "type": "value"
+                        }
+                    ],
+                    "thresholds": {
+                        "mode": "absolute",
+                        "steps": [
+                            {
+                                "color": "red",
+                                "value": null
+                            },
+                            {
+                                "color": "green",
+                                "value": 0.5
+                            }
+                        ]
+                    }
+                },
+                "overrides": []
+            },
+            "gridPos": {
+                "h": 6,
+                "w": 6,
+                "x": 0,
+                "y": 0
+            },
+            "id": 7,
+            "options": {
+                "colorMode": "value",
+                "graphMode": "none",
+                "justifyMode": "auto",
+                "orientation": "auto",
+                "reduceOptions": {
+                    "calcs": ["lastNotNull"],
+                    "fields": "",
+                    "values": false
+                },
+                "textMode": "auto",
+                "wideLayout": true
+            },
+            "pluginVersion": "10.2.3",
+            "targets": [
+                {
+                    "datasource": {
+                        "type": "prometheus",
+                        "uid": "PF8CB2B50324B125B"
+                    },
+                    "editorMode": "code",
+                    "expr": "mysql_global_variables_server_id",
+                    "instant": false,
+                    "legendFormat": "{{ instance }}",
+                    "range": true,
+                    "refId": "A"
+                }
+            ],
+            "title": "MySQL server ids",
+            "type": "stat"
+        },
+        {
+            "datasource": {
+                "type": "prometheus",
+                "uid": "PF8CB2B50324B125B"
+            },
+            "fieldConfig": {
+                "defaults": {
+                    "color": {
+                        "mode": "thresholds"
+                    },
+                    "mappings": [
+                        {
+                            "options": {
+                                "0": {
+                                    "index": 1,
+                                    "text": ":("
+                                },
+                                "1": {
+                                    "index": 0,
+                                    "text": "UP"
+                                }
+                            },
+                            "type": "value"
+                        }
+                    ],
+                    "thresholds": {
+                        "mode": "absolute",
+                        "steps": [
+                            {
+                                "color": "red",
+                                "value": null
+                            },
+                            {
+                                "color": "green",
+                                "value": 0.5
+                            }
+                        ]
+                    }
+                },
+                "overrides": []
+            },
+            "gridPos": {
+                "h": 6,
+                "w": 6,
+                "x": 6,
+                "y": 0
+            },
+            "id": 3,
+            "options": {
+                "colorMode": "value",
+                "graphMode": "none",
+                "justifyMode": "auto",
+                "orientation": "auto",
+                "reduceOptions": {
+                    "calcs": ["lastNotNull"],
+                    "fields": "",
+                    "values": false
+                },
+                "textMode": "auto",
+                "wideLayout": true
+            },
+            "pluginVersion": "10.2.3",
+            "targets": [
+                {
+                    "datasource": {
+                        "type": "prometheus",
+                        "uid": "PF8CB2B50324B125B"
+                    },
+                    "editorMode": "code",
+                    "expr": "mysql_up",
+                    "instant": false,
+                    "legendFormat": "{{ instance }}",
+                    "range": true,
+                    "refId": "A"
+                }
+            ],
+            "title": "MySQL",
+            "type": "stat"
+        },
+        {
+            "datasource": {
+                "type": "prometheus",
+                "uid": "PF8CB2B50324B125B"
+            },
+            "fieldConfig": {
+                "defaults": {
+                    "color": {
+                        "mode": "thresholds"
+                    },
+                    "mappings": [
+                        {
+                            "options": {
+                                "0": {
+                                    "index": 1,
+                                    "text": "Read/Write"
+                                },
+                                "1": {
+                                    "index": 0,
+                                    "text": "Read-Only"
+                                }
+                            },
+                            "type": "value"
+                        }
+                    ],
+                    "thresholds": {
+                        "mode": "absolute",
+                        "steps": [
+                            {
+                                "color": "blue",
+                                "value": null
+                            },
+                            {
+                                "color": "green",
+                                "value": 0.5
+                            }
+                        ]
+                    }
+                },
+                "overrides": []
+            },
+            "gridPos": {
+                "h": 6,
+                "w": 12,
+                "x": 12,
+                "y": 0
+            },
+            "id": 10,
+            "options": {
+                "colorMode": "value",
+                "graphMode": "none",
+                "justifyMode": "auto",
+                "orientation": "auto",
+                "reduceOptions": {
+                    "calcs": ["lastNotNull"],
+                    "fields": "",
+                    "values": false
+                },
+                "textMode": "auto",
+                "wideLayout": true
+            },
+            "pluginVersion": "10.2.3",
+            "targets": [
+                {
+                    "datasource": {
+                        "type": "prometheus",
+                        "uid": "PF8CB2B50324B125B"
+                    },
+                    "editorMode": "code",
+                    "expr": "mysql_global_variables_read_only",
+                    "instant": false,
+                    "legendFormat": "{{ instance }}",
+                    "range": true,
+                    "refId": "A"
+                }
+            ],
+            "title": "MySQL server mode",
+            "type": "stat"
+        },
+        {
+            "datasource": {
+                "type": "prometheus",
+                "uid": "PF8CB2B50324B125B"
+            },
+            "fieldConfig": {
+                "defaults": {
+                    "color": {
+                        "mode": "thresholds"
+                    },
+                    "mappings": [
+                        {
+                            "options": {
+                                "0": {
+                                    "index": 1,
+                                    "text": "Stopped"
+                                },
+                                "1": {
+                                    "index": 0,
+                                    "text": "Running"
+                                }
+                            },
+                            "type": "value"
+                        }
+                    ],
+                    "thresholds": {
+                        "mode": "absolute",
+                        "steps": [
+                            {
+                                "color": "red",
+                                "value": null
+                            },
+                            {
+                                "color": "green",
+                                "value": 0.5
+                            }
+                        ]
+                    }
+                },
+                "overrides": []
+            },
+            "gridPos": {
+                "h": 6,
+                "w": 12,
+                "x": 0,
+                "y": 6
+            },
+            "id": 9,
+            "options": {
+                "colorMode": "value",
+                "graphMode": "area",
+                "justifyMode": "auto",
+                "orientation": "auto",
+                "reduceOptions": {
+                    "calcs": ["lastNotNull"],
+                    "fields": "",
+                    "values": false
+                },
+                "textMode": "auto",
+                "wideLayout": true
+            },
+            "pluginVersion": "10.2.3",
+            "targets": [
+                {
+                    "datasource": {
+                        "type": "prometheus",
+                        "uid": "PF8CB2B50324B125B"
+                    },
+                    "editorMode": "code",
+                    "expr": "mysql_slave_status_slave_io_running",
+                    "instant": false,
+                    "legendFormat": "{{ instance }}",
+                    "range": true,
+                    "refId": "A"
+                }
+            ],
+            "title": "MySQL replica I/O thread",
+            "type": "stat"
+        },
+        {
+            "datasource": {
+                "type": "prometheus",
+                "uid": "PF8CB2B50324B125B"
+            },
+            "fieldConfig": {
+                "defaults": {
+                    "color": {
+                        "mode": "thresholds"
+                    },
+                    "mappings": [
+                        {
+                            "options": {
+                                "0": {
+                                    "index": 1,
+                                    "text": "Stopped"
+                                },
+                                "1": {
+                                    "index": 0,
+                                    "text": "Running"
+                                }
+                            },
+                            "type": "value"
+                        }
+                    ],
+                    "thresholds": {
+                        "mode": "absolute",
+                        "steps": [
+                            {
+                                "color": "red",
+                                "value": null
+                            },
+                            {
+                                "color": "green",
+                                "value": 0.5
+                            }
+                        ]
+                    }
+                },
+                "overrides": []
+            },
+            "gridPos": {
+                "h": 6,
+                "w": 12,
+                "x": 12,
+                "y": 6
+            },
+            "id": 8,
+            "options": {
+                "colorMode": "value",
+                "graphMode": "area",
+                "justifyMode": "auto",
+                "orientation": "auto",
+                "reduceOptions": {
+                    "calcs": ["lastNotNull"],
+                    "fields": "",
+                    "values": false
+                },
+                "textMode": "auto",
+                "wideLayout": true
+            },
+            "pluginVersion": "10.2.3",
+            "targets": [
+                {
+                    "datasource": {
+                        "type": "prometheus",
+                        "uid": "PF8CB2B50324B125B"
+                    },
+                    "editorMode": "code",
+                    "expr": "mysql_slave_status_slave_sql_running",
+                    "instant": false,
+                    "legendFormat": "{{ instance }}",
+                    "range": true,
+                    "refId": "A"
+                }
+            ],
+            "title": "MySQL replica SQL thread",
+            "type": "stat"
+        },
+        {
+            "datasource": {
+                "type": "prometheus",
+                "uid": "PF8CB2B50324B125B"
+            },
+            "fieldConfig": {
+                "defaults": {
+                    "color": {
+                        "mode": "palette-classic"
+                    },
+                    "custom": {
+                        "axisBorderShow": false,
+                        "axisCenteredZero": false,
+                        "axisColorMode": "text",
+                        "axisLabel": "",
+                        "axisPlacement": "auto",
+                        "barAlignment": 0,
+                        "drawStyle": "line",
+                        "fillOpacity": 0,
+                        "gradientMode": "none",
+                        "hideFrom": {
+                            "legend": false,
+                            "tooltip": false,
+                            "viz": false
+                        },
+                        "insertNulls": false,
+                        "lineInterpolation": "linear",
+                        "lineWidth": 1,
+                        "pointSize": 5,
+                        "scaleDistribution": {
+                            "type": "linear"
+                        },
+                        "showPoints": "auto",
+                        "spanNulls": false,
+                        "stacking": {
+                            "group": "A",
+                            "mode": "none"
+                        },
+                        "thresholdsStyle": {
+                            "mode": "off"
+                        }
+                    },
+                    "mappings": [],
+                    "thresholds": {
+                        "mode": "absolute",
+                        "steps": [
+                            {
+                                "color": "green",
+                                "value": null
+                            },
+                            {
+                                "color": "red",
+                                "value": 80
+                            }
+                        ]
+                    }
+                },
+                "overrides": []
+            },
+            "gridPos": {
+                "h": 12,
+                "w": 24,
+                "x": 0,
+                "y": 12
+            },
+            "id": 4,
+            "options": {
+                "legend": {
+                    "calcs": [],
+                    "displayMode": "list",
+                    "placement": "bottom",
+                    "showLegend": true
+                },
+                "tooltip": {
+                    "mode": "single",
+                    "sort": "none"
+                }
+            },
+            "targets": [
+                {
+                    "datasource": {
+                        "type": "prometheus",
+                        "uid": "PF8CB2B50324B125B"
+                    },
+                    "editorMode": "code",
+                    "expr": "rate(mysql_global_status_commands_total[5m])",
+                    "instant": false,
+                    "legendFormat": "__auto",
+                    "range": true,
+                    "refId": "A"
+                }
+            ],
+            "title": "MySQL selects per minute",
+            "type": "timeseries"
+        }
+    ],
+    "refresh": "5s",
+    "schemaVersion": 39,
+    "tags": [],
+    "templating": {
+        "list": []
+    },
+    "time": {
+        "from": "now-5m",
+        "to": "now"
+    },
+    "timepicker": {},
+    "timezone": "",
+    "title": "MySQL",
+    "uid": "a2f050a0-f5f5-45b8-9ccd-b7bca74491c1",
+    "version": 2,
+    "weekStart": ""
+}

changed: [AlessandroTambellini-3] => (item=mysql.json)
--- before
+++ after: /home/alessandro/repos/ica0002/roles/grafana/files/syslog.json
@@ -0,0 +1,960 @@
+{
+  "annotations": {
+    "list": [
+      {
+        "builtIn": 1,
+        "datasource": {
+          "type": "datasource",
+          "uid": "grafana"
+        },
+        "enable": true,
+        "hide": true,
+        "iconColor": "rgba(0, 211, 255, 1)",
+        "name": "Annotations & Alerts",
+        "type": "dashboard"
+      }
+    ]
+  },
+  "description": "Telegraf / InfluxDB / Grafana as syslog receiver",
+  "editable": true,
+  "fiscalYearStartMonth": 0,
+  "gnetId": 12433,
+  "graphTooltip": 0,
+  "id": 3,
+  "links": [],
+  "liveNow": false,
+  "panels": [
+    {
+      "aliasColors": {},
+      "bars": true,
+      "dashLength": 10,
+      "dashes": false,
+      "datasource": {
+        "type": "influxdb",
+        "uid": "PD48E60E9DE8E4DA7"
+      },
+      "decimals": 0,
+      "fill": 1,
+      "fillGradient": 0,
+      "gridPos": {
+        "h": 7,
+        "w": 24,
+        "x": 0,
+        "y": 0
+      },
+      "hiddenSeries": false,
+      "id": 10,
+      "interval": "",
+      "legend": {
+        "alignAsTable": true,
+        "avg": true,
+        "current": false,
+        "max": true,
+        "min": false,
+        "rightSide": true,
+        "show": true,
+        "total": true,
+        "values": true
+      },
+      "lines": false,
+      "linewidth": 1,
+      "links": [],
+      "nullPointMode": "connected",
+      "options": {
+        "alertThreshold": true
+      },
+      "percentage": false,
+      "pluginVersion": "10.2.0",
+      "pointradius": 2,
+      "points": false,
+      "renderer": "flot",
+      "seriesOverrides": [
+        {
+          "alias": "Info",
+          "color": "rgb(80, 80, 80)",
+          "stack": "A"
+        },
+        {
+          "alias": "Notice",
+          "color": "rgb(182, 182, 182)",
+          "stack": "A"
+        },
+        {
+          "alias": "Warning",
+          "color": "#E0B400",
+          "stack": "A"
+        },
+        {
+          "alias": "Error",
+          "color": "#FF780A",
+          "stack": "A"
+        },
+        {
+          "alias": "Critical",
+          "color": "#E02F44",
+          "stack": "A"
+        },
+        {
+          "alias": "Alert",
+          "color": "#8F3BB8",
+          "stack": "A"
+        },
+        {
+          "alias": "Emergency",
+          "color": "#8F3BB8",
+          "stack": "A"
+        }
+      ],
+      "spaceLength": 10,
+      "stack": false,
+      "steppedLine": false,
+      "targets": [
+        {
+          "alias": "Info",
+          "datasource": {
+            "type": "influxdb",
+            "uid": "PD48E60E9DE8E4DA7"
+          },
+          "groupBy": [
+            {
+              "params": ["1m"],
+              "type": "time"
+            },
+            {
+              "params": ["null"],
+              "type": "fill"
+            }
+          ],
+          "measurement": "syslog",
+          "orderByTime": "ASC",
+          "policy": "default",
+          "refId": "A",
+          "resultFormat": "time_series",
+          "select": [
+            [
+              {
+                "params": ["severity_code"],
+                "type": "field"
+              },
+              {
+                "params": [],
+                "type": "count"
+              }
+            ]
+          ],
+          "tags": [
+            {
+              "key": "severity",
+              "operator": "=",
+              "value": "info"
+            },
+            {
+              "condition": "AND",
+              "key": "hostname",
+              "operator": "=~",
+              "value": "/^$hostname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "severity",
+              "operator": "=~",
+              "value": "/^$severity$/"
+            },
+            {
+              "condition": "AND",
+              "key": "appname",
+              "operator": "=~",
+              "value": "/^$appname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "message",
+              "operator": "=~",
+              "value": "/$Query/"
+            }
+          ]
+        },
+        {
+          "alias": "Notice",
+          "datasource": {
+            "type": "influxdb",
+            "uid": "PD48E60E9DE8E4DA7"
+          },
+          "groupBy": [
+            {
+              "params": ["1m"],
+              "type": "time"
+            },
+            {
+              "params": ["null"],
+              "type": "fill"
+            }
+          ],
+          "measurement": "syslog",
+          "orderByTime": "ASC",
+          "policy": "default",
+          "refId": "B",
+          "resultFormat": "time_series",
+          "select": [
+            [
+              {
+                "params": ["severity_code"],
+                "type": "field"
+              },
+              {
+                "params": [],
+                "type": "count"
+              }
+            ]
+          ],
+          "tags": [
+            {
+              "key": "severity",
+              "operator": "=",
+              "value": "notice"
+            },
+            {
+              "condition": "AND",
+              "key": "hostname",
+              "operator": "=~",
+              "value": "/^$hostname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "severity",
+              "operator": "=~",
+              "value": "/^$severity$/"
+            },
+            {
+              "condition": "AND",
+              "key": "appname",
+              "operator": "=~",
+              "value": "/^$appname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "message",
+              "operator": "=~",
+              "value": "/$Query/"
+            }
+          ]
+        },
+        {
+          "alias": "Warning",
+          "datasource": {
+            "type": "influxdb",
+            "uid": "PD48E60E9DE8E4DA7"
+          },
+          "groupBy": [
+            {
+              "params": ["1m"],
+              "type": "time"
+            },
+            {
+              "params": ["null"],
+              "type": "fill"
+            }
+          ],
+          "measurement": "syslog",
+          "orderByTime": "ASC",
+          "policy": "default",
+          "refId": "D",
+          "resultFormat": "time_series",
+          "select": [
+            [
+              {
+                "params": ["severity_code"],
+                "type": "field"
+              },
+              {
+                "params": [],
+                "type": "count"
+              }
+            ]
+          ],
+          "tags": [
+            {
+              "key": "severity",
+              "operator": "=",
+              "value": "warning"
+            },
+            {
+              "condition": "AND",
+              "key": "hostname",
+              "operator": "=~",
+              "value": "/^$hostname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "severity",
+              "operator": "=~",
+              "value": "/^$severity$/"
+            },
+            {
+              "condition": "AND",
+              "key": "appname",
+              "operator": "=~",
+              "value": "/^$appname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "message",
+              "operator": "=~",
+              "value": "/$Query/"
+            }
+          ]
+        },
+        {
+          "alias": "Error",
+          "datasource": {
+            "type": "influxdb",
+            "uid": "PD48E60E9DE8E4DA7"
+          },
+          "groupBy": [
+            {
+              "params": ["1m"],
+              "type": "time"
+            },
+            {
+              "params": ["null"],
+              "type": "fill"
+            }
+          ],
+          "measurement": "syslog",
+          "orderByTime": "ASC",
+          "policy": "default",
+          "refId": "C",
+          "resultFormat": "time_series",
+          "select": [
+            [
+              {
+                "params": ["severity_code"],
+                "type": "field"
+              },
+              {
+                "params": [],
+                "type": "count"
+              }
+            ]
+          ],
+          "tags": [
+            {
+              "key": "severity",
+              "operator": "=",
+              "value": "err"
+            },
+            {
+              "condition": "AND",
+              "key": "hostname",
+              "operator": "=~",
+              "value": "/^$hostname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "severity",
+              "operator": "=~",
+              "value": "/^$severity$/"
+            },
+            {
+              "condition": "AND",
+              "key": "appname",
+              "operator": "=~",
+              "value": "/^$appname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "message",
+              "operator": "=~",
+              "value": "/$Query/"
+            }
+          ]
+        },
+        {
+          "alias": "Critical",
+          "datasource": {
+            "type": "influxdb",
+            "uid": "PD48E60E9DE8E4DA7"
+          },
+          "groupBy": [
+            {
+              "params": ["1m"],
+              "type": "time"
+            },
+            {
+              "params": ["null"],
+              "type": "fill"
+            }
+          ],
+          "measurement": "syslog",
+          "orderByTime": "ASC",
+          "policy": "default",
+          "refId": "E",
+          "resultFormat": "time_series",
+          "select": [
+            [
+              {
+                "params": ["severity_code"],
+                "type": "field"
+              },
+              {
+                "params": [],
+                "type": "count"
+              }
+            ]
+          ],
+          "tags": [
+            {
+              "key": "severity",
+              "operator": "=",
+              "value": "crit"
+            },
+            {
+              "condition": "AND",
+              "key": "hostname",
+              "operator": "=~",
+              "value": "/^$hostname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "severity",
+              "operator": "=~",
+              "value": "/^$severity$/"
+            },
+            {
+              "condition": "AND",
+              "key": "appname",
+              "operator": "=~",
+              "value": "/^$appname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "message",
+              "operator": "=~",
+              "value": "/$Query/"
+            }
+          ]
+        },
+        {
+          "alias": "Alert",
+          "datasource": {
+            "type": "influxdb",
+            "uid": "PD48E60E9DE8E4DA7"
+          },
+          "groupBy": [
+            {
+              "params": ["1m"],
+              "type": "time"
+            },
+            {
+              "params": ["null"],
+              "type": "fill"
+            }
+          ],
+          "measurement": "syslog",
+          "orderByTime": "ASC",
+          "policy": "default",
+          "refId": "F",
+          "resultFormat": "time_series",
+          "select": [
+            [
+              {
+                "params": ["severity_code"],
+                "type": "field"
+              },
+              {
+                "params": [],
+                "type": "count"
+              }
+            ]
+          ],
+          "tags": [
+            {
+              "key": "severity",
+              "operator": "=",
+              "value": "alert"
+            },
+            {
+              "condition": "AND",
+              "key": "hostname",
+              "operator": "=~",
+              "value": "/^$hostname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "severity",
+              "operator": "=~",
+              "value": "/^$severity$/"
+            },
+            {
+              "condition": "AND",
+              "key": "appname",
+              "operator": "=~",
+              "value": "/^$appname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "message",
+              "operator": "=~",
+              "value": "/$Query/"
+            }
+          ]
+        },
+        {
+          "alias": "Emergency",
+          "datasource": {
+            "type": "influxdb",
+            "uid": "PD48E60E9DE8E4DA7"
+          },
+          "groupBy": [
+            {
+              "params": ["1m"],
+              "type": "time"
+            },
+            {
+              "params": ["null"],
+              "type": "fill"
+            }
+          ],
+          "measurement": "syslog",
+          "orderByTime": "ASC",
+          "policy": "default",
+          "refId": "G",
+          "resultFormat": "time_series",
+          "select": [
+            [
+              {
+                "params": ["severity_code"],
+                "type": "field"
+              },
+              {
+                "params": [],
+                "type": "count"
+              }
+            ]
+          ],
+          "tags": [
+            {
+              "key": "severity",
+              "operator": "=",
+              "value": "emerg"
+            },
+            {
+              "condition": "AND",
+              "key": "hostname",
+              "operator": "=~",
+              "value": "/^$hostname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "severity",
+              "operator": "=~",
+              "value": "/^$severity$/"
+            },
+            {
+              "condition": "AND",
+              "key": "appname",
+              "operator": "=~",
+              "value": "/^$appname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "message",
+              "operator": "=~",
+              "value": "/$Query/"
+            }
+          ]
+        }
+      ],
+      "thresholds": [],
+      "timeRegions": [],
+      "title": "syslog count",
+      "tooltip": {
+        "shared": true,
+        "sort": 0,
+        "value_type": "individual"
+      },
+      "type": "graph",
+      "xaxis": {
+        "mode": "time",
+        "show": true,
+        "values": []
+      },
+      "yaxes": [
+        {
+          "decimals": 0,
+          "format": "none",
+          "label": "Messages / min",
+          "logBase": 1,
+          "show": true
+        },
+        {
+          "format": "short",
+          "logBase": 1,
+          "show": false
+        }
+      ],
+      "yaxis": {
+        "align": false
+      }
+    },
+    {
+      "datasource": {
+        "type": "influxdb",
+        "uid": "PD48E60E9DE8E4DA7"
+      },
+      "description": "",
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "thresholds"
+          },
+          "custom": {
+            "align": "left",
+            "cellOptions": {
+              "type": "auto"
+            },
+            "filterable": false,
+            "inspect": false
+          },
+          "mappings": [],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "dark-purple"
+              },
+              {
+                "color": "dark-red",
+                "value": 2
+              },
+              {
+                "color": "dark-orange",
+                "value": 3
+              },
+              {
+                "color": "dark-yellow",
+                "value": 4
+              },
+              {
+                "color": "rgb(150, 150, 150)",
+                "value": 5
+              },
+              {
+                "color": "rgb(51, 51, 51)",
+                "value": 6
+              },
+              {
+                "color": "rgb(5, 5, 5)",
+                "value": 7
+              }
+            ]
+          }
+        },
+        "overrides": [
+          {
+            "matcher": {
+              "id": "byName",
+              "options": "severity_code"
+            },
+            "properties": [
+              {
+                "id": "mappings",
+                "value": [
+                  {
+                    "options": {
+                      "0": {
+                        "text": "Emergency"
+                      },
+                      "1": {
+                        "text": "Alert"
+                      },
+                      "2": {
+                        "text": "Critical"
+                      },
+                      "3": {
+                        "text": "Error"
+                      },
+                      "4": {
+                        "text": "Warning"
+                      },
+                      "5": {
+                        "text": "Notice"
+                      },
+                      "6": {
+                        "text": "Info"
+                      },
+                      "7": {
+                        "text": "Debug"
+                      }
+                    },
+                    "type": "value"
+                  }
+                ]
+              },
+              {
+                "id": "custom.cellOptions",
+                "value": {
+                  "mode": "gradient",
+                  "type": "color-background"
+                }
+              },
+              {
+                "id": "custom.width",
+                "value": 119
+              }
+            ]
+          },
+          {
+            "matcher": {
+              "id": "byName",
+              "options": "Time"
+            },
+            "properties": [
+              {
+                "id": "custom.width",
+                "value": 163
+              }
+            ]
+          },
+          {
+            "matcher": {
+              "id": "byName",
+              "options": "hostname"
+            },
+            "properties": [
+              {
+                "id": "custom.width",
+                "value": 194
+              }
+            ]
+          },
+          {
+            "matcher": {
+              "id": "byName",
+              "options": "appname"
+            },
+            "properties": [
+              {
+                "id": "custom.width",
+                "value": 264
+              }
+            ]
+          }
+        ]
+      },
+      "gridPos": {
+        "h": 24,
+        "w": 24,
+        "x": 0,
+        "y": 7
+      },
+      "id": 12,
+      "options": {
+        "cellHeight": "sm",
+        "footer": {
+          "countRows": false,
+          "fields": "",
+          "reducer": ["sum"],
+          "show": false
+        },
+        "showHeader": true,
+        "sortBy": [
+          {
+            "desc": true,
+            "displayName": "Time"
+          }
+        ]
+      },
+      "pluginVersion": "10.2.0",
+      "targets": [
+        {
+          "datasource": {
+            "type": "influxdb",
+            "uid": "PD48E60E9DE8E4DA7"
+          },
+          "groupBy": [
+            {
+              "params": ["hostname"],
+              "type": "tag"
+            },
+            {
+              "params": ["appname"],
+              "type": "tag"
+            }
+          ],
+          "measurement": "syslog",
+          "orderByTime": "ASC",
+          "policy": "default",
+          "refId": "A",
+          "resultFormat": "table",
+          "select": [
+            [
+              {
+                "params": ["severity_code"],
+                "type": "field"
+              }
+            ],
+            [
+              {
+                "params": ["message"],
+                "type": "field"
+              }
+            ]
+          ],
+          "tags": [
+            {
+              "key": "hostname",
+              "operator": "=~",
+              "value": "/^$hostname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "appname",
+              "operator": "=~",
+              "value": "/^$appname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "severity",
+              "operator": "=~",
+              "value": "/^$severity$/"
+            },
+            {
+              "condition": "AND",
+              "key": "message",
+              "operator": "=~",
+              "value": "/$Query/"
+            }
+          ]
+        }
+      ],
+      "title": "Syslog Messages",
+      "type": "table"
+    }
+  ],
+  "refresh": "5s",
+  "schemaVersion": 38,
+  "tags": [],
+  "templating": {
+    "list": [
+      {
+        "allValue": "",
+        "current": {
+          "selected": false,
+          "text": "All",
+          "value": "$__all"
+        },
+        "datasource": {
+          "type": "influxdb",
+          "uid": "PD48E60E9DE8E4DA7"
+        },
+        "definition": "SHOW TAG VALUES FROM syslog WITH KEY=appname",
+        "hide": 0,
+        "includeAll": true,
+        "label": "Appname",
+        "multi": true,
+        "name": "appname",
+        "options": [],
+        "query": "SHOW TAG VALUES FROM syslog WITH KEY=appname",
+        "refresh": 2,
+        "regex": "",
+        "skipUrlSync": false,
+        "sort": 1,
+        "tagValuesQuery": "",
+        "tagsQuery": "",
+        "type": "query",
+        "useTags": false
+      },
+      {
+        "allValue": "",
+        "current": {
+          "selected": false,
+          "text": "All",
+          "value": "$__all"
+        },
+        "datasource": {
+          "type": "influxdb",
+          "uid": "PD48E60E9DE8E4DA7"
+        },
+        "definition": "SHOW TAG VALUES FROM syslog WITH KEY=hostname",
+        "hide": 0,
+        "includeAll": true,
+        "label": "Hostname",
+        "multi": true,
+        "name": "hostname",
+        "options": [],
+        "query": "SHOW TAG VALUES FROM syslog WITH KEY=hostname",
+        "refresh": 2,
+        "regex": "",
+        "skipUrlSync": false,
+        "sort": 1,
+        "tagValuesQuery": "",
+        "tagsQuery": "",
+        "type": "query",
+        "useTags": false
+      },
+      {
+        "allValue": "",
+        "current": {
+          "selected": false,
+          "text": "All",
+          "value": "$__all"
+        },
+        "datasource": {
+          "type": "influxdb",
+          "uid": "PD48E60E9DE8E4DA7"
+        },
+        "definition": "SHOW TAG VALUES FROM syslog WITH KEY=severity",
+        "hide": 0,
+        "includeAll": true,
+        "label": "Severity",
+        "multi": true,
+        "name": "severity",
+        "options": [],
+        "query": "SHOW TAG VALUES FROM syslog WITH KEY=severity",
+        "refresh": 2,
+        "regex": "",
+        "skipUrlSync": false,
+        "sort": 0,
+        "tagValuesQuery": "",
+        "tagsQuery": "",
+        "type": "query",
+        "useTags": false
+      },
+      {
+        "current": {
+          "selected": false,
+          "text": "",
+          "value": ""
+        },
+        "description": "Querystring",
+        "hide": 0,
+        "label": "MessageQuery",
+        "name": "Query",
+        "options": [
+          {
+            "selected": true,
+            "text": "",
+            "value": ""
+          }
+        ],
+        "query": "",
+        "skipUrlSync": false,
+        "type": "textbox"
+      }
+    ]
+  },
+  "time": {
+    "from": "now-1h",
+    "to": "now"
+  },
+  "timepicker": {
+    "refresh_intervals": ["5s", " 10s", " 30s", " 1m", " 5m"],
+    "time_options": ["5m", "15m", "1h", "6h", "12h", "24h", "2d", "7d", "30d"]
+  },
+  "timezone": "",
+  "title": "Syslog",
+  "uid": "TIYeHqRgZ",
+  "version": 2,
+  "weekStart": ""
+}

changed: [AlessandroTambellini-3] => (item=syslog.json)

TASK [grafana : Grafana Docker container] **************************************
--- before
+++ after
@@ -1,4 +1,4 @@
 {
-    "exists": false,
-    "running": false
+    "exists": true,
+    "running": true
 }

changed: [AlessandroTambellini-3]

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for grafana server] ************************
changed: [AlessandroTambellini-3]

RUNNING HANDLER [grafana : Restart grafana-container] **************************
--- before
+++ after
@@ -1,4 +1,4 @@
 {
-    "restarted": false,
+    "restarted": true,
     "running": true
 }

changed: [AlessandroTambellini-3]

PLAY [nginx server] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-3]

TASK [nginx : Install nginx and prometheus-nginx-exporter] *********************
The following additional packages will be installed:
  fontconfig-config fonts-dejavu-core libfontconfig1 libgd3 libjbig0
  libjpeg-turbo8 libjpeg8 libnginx-mod-http-image-filter
  libnginx-mod-http-xslt-filter libnginx-mod-mail libnginx-mod-stream libtiff5
  libwebp6 libxpm4 nginx-common nginx-core
Suggested packages:
  libgd-tools fcgiwrap nginx-doc ssl-cert
The following NEW packages will be installed:
  fontconfig-config fonts-dejavu-core libfontconfig1 libgd3 libjbig0
  libjpeg-turbo8 libjpeg8 libnginx-mod-http-image-filter
  libnginx-mod-http-xslt-filter libnginx-mod-mail libnginx-mod-stream libtiff5
  libwebp6 libxpm4 nginx nginx-common nginx-core prometheus-nginx-exporter
0 upgraded, 18 newly installed, 0 to remove and 265 not upgraded.
changed: [AlessandroTambellini-3]

TASK [nginx : nginx configuration] *********************************************
--- before: /etc/nginx/sites-enabled/default
+++ after: /home/alessandro/.ansible/tmp/ansible-local-140907ks7a15gl/tmpxt8jtweo/default.j2
@@ -1,91 +1,25 @@
-##
-# You should look at the following URL's in order to grasp a solid understanding
-# of Nginx configuration files in order to fully unleash the power of Nginx.
-# https://www.nginx.com/resources/wiki/start/
-# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
-# https://wiki.debian.org/Nginx/DirectoryStructure
-#
-# In most cases, administrators will remove this file from sites-enabled/ and
-# leave it as reference inside of sites-available where it will continue to be
-# updated by the nginx packaging team.
-#
-# This file will automatically load configuration files provided by other
-# applications, such as Drupal or Wordpress. These applications will be made
-# available underneath a path with that package name, such as /drupal8.
-#
-# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
-##
+server {
+    listen 80 default_server;
+    server_name _;
 
-# Default server configuration
-#
-server {
-	listen 80 default_server;
-	listen [::]:80 default_server;
+    location / {
+        proxy_pass http://www-1:8001;
+        proxy_set_header Host $http_host;     }
 
-	# SSL configuration
-	#
-	# listen 443 ssl default_server;
-	# listen [::]:443 ssl default_server;
-	#
-	# Note: You should disable gzip for SSL traffic.
-	# See: https://bugs.debian.org/773332
-	#
-	# Read up on ssl_ciphers to ensure a secure configuration.
-	# See: https://bugs.debian.org/765782
-	#
-	# Self signed certs generated by the ssl-cert package
-	# Don't use them in a production server!
-	#
-	# include snippets/snakeoil.conf;
+    location /prometheus {
+        proxy_pass http://localhost:9090;
+    }
 
-	root /var/www/html;
+    location /grafana {
+        proxy_pass http://localhost:3001;
+        proxy_set_header Host $http_host;
+    }
 
-	# Add index.php to the list if you are using PHP
-	index index.html index.htm index.nginx-debian.html;
-
-	server_name _;
-
-	location / {
-		# First attempt to serve request as file, then
-		# as directory, then fall back to displaying a 404.
-		try_files $uri $uri/ =404;
-	}
-
-	# pass PHP scripts to FastCGI server
-	#
-	#location ~ \.php$ {
-	#	include snippets/fastcgi-php.conf;
-	#
-	#	# With php-fpm (or other unix sockets):
-	#	fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
-	#	# With php-cgi (or other tcp sockets):
-	#	fastcgi_pass 127.0.0.1:9000;
-	#}
-
-	# deny access to .htaccess files, if Apache's document root
-	# concurs with nginx's one
-	#
-	#location ~ /\.ht {
-	#	deny all;
-	#}
 }
 
-
-# Virtual Host configuration for example.com
-#
-# You can move that to a different file under sites-available/ and symlink that
-# to sites-enabled/ to enable it.
-#
-#server {
-#	listen 80;
-#	listen [::]:80;
-#
-#	server_name example.com;
-#
-#	root /var/www/example.com;
-#	index index.html;
-#
-#	location / {
-#		try_files $uri $uri/ =404;
-#	}
-#}
+server {
+    listen 8080 default_server; 
+    location = /stub_status {
+        stub_status;
+    }
+}

changed: [AlessandroTambellini-3]

TASK [nginx : meta] ************************************************************

RUNNING HANDLER [nginx : Restart nginx] ****************************************
changed: [AlessandroTambellini-3]

TASK [nginx : Ensure services are started] *************************************
ok: [AlessandroTambellini-3] => (item=nginx)
changed: [AlessandroTambellini-3] => (item=prometheus-nginx-exporter)

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for nginx-3 server] ************************
changed: [AlessandroTambellini-3]

PLAY RECAP *********************************************************************
AlessandroTambellini-1     : ok=74   changed=57   unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
AlessandroTambellini-2     : ok=74   changed=57   unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
AlessandroTambellini-3     : ok=77   changed=62   unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

+ ansible-playbook infra.yaml --diff

PLAY [Gather facts] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-3]
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

PLAY [Initial setup] ***********************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-3]

TASK [init : Install required packages and set caching time] *******************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-3]

TASK [init : prometheus-node-exporter configuration] ***************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-3]
ok: [AlessandroTambellini-1]

TASK [init : rsyslog config for Telegraf] **************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-3]

TASK [init : Ensure services are running] **************************************
ok: [AlessandroTambellini-1] => (item=prometheus-node-exporter)
ok: [AlessandroTambellini-2] => (item=prometheus-node-exporter)
ok: [AlessandroTambellini-3] => (item=prometheus-node-exporter)
ok: [AlessandroTambellini-1] => (item=rsyslog)
ok: [AlessandroTambellini-2] => (item=rsyslog)
ok: [AlessandroTambellini-3] => (item=rsyslog)

TASK [init : Add the user backup] **********************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-3]

TASK [init : Add SSH key] ******************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-3]

TASK [init : create "restore" dir] *********************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-3]

PLAY [DNS servers] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-3]

TASK [bind : Install bind9, prometheus-bind-exporter and python3-dnspython] ****
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-3]

TASK [bind : bind9 named.conf.options] *****************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-3]

TASK [bind : bind9 named.conf.local] *******************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-3]

TASK [bind : primary zone config] **********************************************
skipping: [AlessandroTambellini-1]
skipping: [AlessandroTambellini-2]
ok: [AlessandroTambellini-3]

TASK [bind : rev zone config] **************************************************
skipping: [AlessandroTambellini-1]
skipping: [AlessandroTambellini-2]
ok: [AlessandroTambellini-3]

TASK [bind : meta] *************************************************************

TASK [bind : Ensure services are started] **************************************
ok: [AlessandroTambellini-3] => (item=bind9)
ok: [AlessandroTambellini-1] => (item=bind9)
ok: [AlessandroTambellini-2] => (item=bind9)
ok: [AlessandroTambellini-1] => (item=prometheus-bind-exporter)
ok: [AlessandroTambellini-3] => (item=prometheus-bind-exporter)
ok: [AlessandroTambellini-2] => (item=prometheus-bind-exporter)

TASK [bind : Set A record for backup server] ***********************************
skipping: [AlessandroTambellini-1]
skipping: [AlessandroTambellini-2]
ok: [AlessandroTambellini-3]

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for ns-3 server] ***************************
ok: [AlessandroTambellini-3]
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

PLAY [Resolvers] ***************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-3]

TASK [resolvers : Stop service systemd-resolved, if started] *******************
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-3]

TASK [resolvers : Update VM DNS settings] **************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-3]

PLAY [Database server] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : prometheus-mysqld-exporter user configuration] *******************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : prometheus-mysqld-exporter args] *********************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : Install required packages] ***************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : MySQL exporter user] *********************************************
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-2]

TASK [mysql : Ensure MySQL services are started] *******************************
ok: [AlessandroTambellini-2] => (item=mysql)
ok: [AlessandroTambellini-1] => (item=mysql)
ok: [AlessandroTambellini-2] => (item=prometheus-mysqld-exporter)
ok: [AlessandroTambellini-1] => (item=prometheus-mysqld-exporter)

TASK [mysql : Create agama database] *******************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : MySQL agama user] ************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : MySQL configuration] *********************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : create backup dir for mysql] *************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : backup user] *****************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : Client config] ***************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : Cron config] *****************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : MySQL replication user] ******************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : set read-only mode to db] ****************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for mysql-1 server] ************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

PLAY [Docker servers] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-3]

TASK [docker : Install python3-docker and docker.io] ***************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-3]

TASK [docker : Ensure service is running] **************************************
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-3]

PLAY [agama servers] ***********************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [agama : Create dir] ******************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [agama : Download agama and Dockerfile] ***********************************
ok: [AlessandroTambellini-2] => (item=https://raw.githubusercontent.com/hudolejev/agama/master/agama.py)
ok: [AlessandroTambellini-1] => (item=https://raw.githubusercontent.com/hudolejev/agama/master/agama.py)
ok: [AlessandroTambellini-2] => (item=https://raw.githubusercontent.com/hudolejev/agama/master/Dockerfile)
ok: [AlessandroTambellini-1] => (item=https://raw.githubusercontent.com/hudolejev/agama/master/Dockerfile)

TASK [agama : Build image] *****************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [agama : agama containers] ************************************************
ok: [AlessandroTambellini-2] => (item=None)
ok: [AlessandroTambellini-1] => (item=None)
ok: [AlessandroTambellini-2] => (item=None)
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1] => (item=None)
ok: [AlessandroTambellini-1]

TASK [agama : Get number of containers] ****************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [agama : Delete unused containers] ****************************************
ok: [AlessandroTambellini-2] => (item=3)
ok: [AlessandroTambellini-1] => (item=3)
ok: [AlessandroTambellini-2] => (item=4)
ok: [AlessandroTambellini-1] => (item=4)
ok: [AlessandroTambellini-2] => (item=5)
ok: [AlessandroTambellini-1] => (item=5)

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for www-1 server] **************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

PLAY [haproxy] *****************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [haproxy : Install haproxy and prometheus-haproxy-exporter] ***************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [haproxy : HAProxy config] ************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [haproxy : HAProxy exporter config] ***************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [haproxy : Ensure services are running] ***********************************
ok: [AlessandroTambellini-2] => (item=haproxy)
ok: [AlessandroTambellini-1] => (item=haproxy)
ok: [AlessandroTambellini-2] => (item=prometheus-haproxy-exporter)
ok: [AlessandroTambellini-1] => (item=prometheus-haproxy-exporter)

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for lb-1 server] ***************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

PLAY [keepalived] **************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [keepalived : Install keepalived] *****************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [keepalived : Create user 'keepalived_script'] ****************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [keepalived : Create dir 'keepalived_script'] *****************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [keepalived : haproxy script] *********************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [keepalived : Keepalived config] ******************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [keepalived : Download keepalived-exporter] *******************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [keepalived : Unarchive keepalived-exporter] ******************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [keepalived : Move keepalived-exporter executable] ************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [keepalived : keepalived-exporter config] *********************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [keepalived : Ensure keepalived is running] *******************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [keepalived : Ensure keepalived-exporter service is running] **************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for ka-1 server] ***************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

PLAY [InfluxDB] ****************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Install prerequisite packages] ********************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Download InfluxDB] ********************************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Install InfluxDB] *********************************************
ok: [AlessandroTambellini-3]

TASK [influxdb : InfluxDB config] **********************************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Add GPG key] **************************************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Add stable repository] ****************************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Install telegraf] *********************************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Telegraf config] **********************************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Ensure InfluxDB and Telegram are running] *********************
ok: [AlessandroTambellini-3] => (item=influxdb)
ok: [AlessandroTambellini-3] => (item=telegraf)

TASK [influxdb : Download Influxdb stats Exporter] *****************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Exporter service config] **************************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Ensure prometheus-influxdb-stats-exporter is running] *********
ok: [AlessandroTambellini-3]

TASK [influxdb : create backup dir for influxdb] *******************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Cron config] **************************************************
ok: [AlessandroTambellini-3]

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for influxdb server] ***********************
ok: [AlessandroTambellini-3]

PLAY [pinger] ******************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-3]

TASK [pinger : Install prerequisite pkgs] **************************************
ok: [AlessandroTambellini-3]

TASK [pinger : Add the user 'pinger'] ******************************************
ok: [AlessandroTambellini-3]

TASK [pinger : Create pinger dir] **********************************************
ok: [AlessandroTambellini-3]

TASK [pinger : pinger config] **************************************************
ok: [AlessandroTambellini-3]

TASK [pinger : pinger script] **************************************************
ok: [AlessandroTambellini-3]

TASK [pinger : ping service config] ********************************************
ok: [AlessandroTambellini-3]

TASK [pinger : Ensure pinger is running] ***************************************
ok: [AlessandroTambellini-3]

PLAY [Prometheus server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-3]

TASK [prometheus : Install Prometheus] *****************************************
ok: [AlessandroTambellini-3]

TASK [prometheus : Prometheus args] ********************************************
ok: [AlessandroTambellini-3]

TASK [prometheus : Configure Prometheus] ***************************************
ok: [AlessandroTambellini-3]

TASK [prometheus : Ensure Prometheus service is started] ***********************
ok: [AlessandroTambellini-3]

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for prometheus server] *********************
ok: [AlessandroTambellini-3]

PLAY [Grafana server] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-3]

TASK [grafana : Grafana directory] *********************************************
ok: [AlessandroTambellini-3] => (item=dashboards)
ok: [AlessandroTambellini-3] => (item=datasources)

TASK [grafana : Grafana configuration] *****************************************
ok: [AlessandroTambellini-3]

TASK [grafana : Add datasources] ***********************************************
ok: [AlessandroTambellini-3]

TASK [grafana : dashboards files] **********************************************
ok: [AlessandroTambellini-3] => (item=datasources.conf.yaml)
ok: [AlessandroTambellini-3] => (item=main.json)
ok: [AlessandroTambellini-3] => (item=mysql.json)
ok: [AlessandroTambellini-3] => (item=syslog.json)

TASK [grafana : Grafana Docker container] **************************************
ok: [AlessandroTambellini-3]

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for grafana server] ************************
ok: [AlessandroTambellini-3]

PLAY [nginx server] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-3]

TASK [nginx : Install nginx and prometheus-nginx-exporter] *********************
ok: [AlessandroTambellini-3]

TASK [nginx : nginx configuration] *********************************************
ok: [AlessandroTambellini-3]

TASK [nginx : meta] ************************************************************

TASK [nginx : Ensure services are started] *************************************
ok: [AlessandroTambellini-3] => (item=nginx)
ok: [AlessandroTambellini-3] => (item=prometheus-nginx-exporter)

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for nginx-3 server] ************************
ok: [AlessandroTambellini-3]

PLAY RECAP *********************************************************************
AlessandroTambellini-1     : ok=64   changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
AlessandroTambellini-2     : ok=64   changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
AlessandroTambellini-3     : ok=66   changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

+ ansible all -b -m reboot -a test_command=uptime
AlessandroTambellini-3 | CHANGED => {
    "changed": true,
    "elapsed": 64,
    "rebooted": true
}
AlessandroTambellini-2 | CHANGED => {
    "changed": true,
    "elapsed": 67,
    "rebooted": true
}
AlessandroTambellini-1 | CHANGED => {
    "changed": true,
    "elapsed": 69,
    "rebooted": true
}
+ ansible-playbook infra.yaml --diff

PLAY [Gather facts] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-3]
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-2]

PLAY [Initial setup] ***********************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-3]
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-2]

TASK [init : Install required packages and set caching time] *******************
ok: [AlessandroTambellini-3]
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [init : prometheus-node-exporter configuration] ***************************
ok: [AlessandroTambellini-3]
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [init : rsyslog config for Telegraf] **************************************
ok: [AlessandroTambellini-3]
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [init : Ensure services are running] **************************************
ok: [AlessandroTambellini-3] => (item=prometheus-node-exporter)
ok: [AlessandroTambellini-2] => (item=prometheus-node-exporter)
ok: [AlessandroTambellini-1] => (item=prometheus-node-exporter)
ok: [AlessandroTambellini-3] => (item=rsyslog)
ok: [AlessandroTambellini-2] => (item=rsyslog)
ok: [AlessandroTambellini-1] => (item=rsyslog)

TASK [init : Add the user backup] **********************************************
ok: [AlessandroTambellini-3]
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [init : Add SSH key] ******************************************************
ok: [AlessandroTambellini-3]
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [init : create "restore" dir] *********************************************
ok: [AlessandroTambellini-3]
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

PLAY [DNS servers] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-3]
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [bind : Install bind9, prometheus-bind-exporter and python3-dnspython] ****
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-3]

TASK [bind : bind9 named.conf.options] *****************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-3]
ok: [AlessandroTambellini-1]

TASK [bind : bind9 named.conf.local] *******************************************
ok: [AlessandroTambellini-3]
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [bind : primary zone config] **********************************************
skipping: [AlessandroTambellini-1]
skipping: [AlessandroTambellini-2]
ok: [AlessandroTambellini-3]

TASK [bind : rev zone config] **************************************************
skipping: [AlessandroTambellini-1]
skipping: [AlessandroTambellini-2]
ok: [AlessandroTambellini-3]

TASK [bind : meta] *************************************************************

TASK [bind : Ensure services are started] **************************************
ok: [AlessandroTambellini-3] => (item=bind9)
ok: [AlessandroTambellini-2] => (item=bind9)
ok: [AlessandroTambellini-1] => (item=bind9)
ok: [AlessandroTambellini-3] => (item=prometheus-bind-exporter)
ok: [AlessandroTambellini-2] => (item=prometheus-bind-exporter)
ok: [AlessandroTambellini-1] => (item=prometheus-bind-exporter)

TASK [bind : Set A record for backup server] ***********************************
skipping: [AlessandroTambellini-1]
skipping: [AlessandroTambellini-2]
ok: [AlessandroTambellini-3]

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for ns-3 server] ***************************
ok: [AlessandroTambellini-3]
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

PLAY [Resolvers] ***************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-3]
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [resolvers : Stop service systemd-resolved, if started] *******************
ok: [AlessandroTambellini-3]
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [resolvers : Update VM DNS settings] **************************************
ok: [AlessandroTambellini-3]
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

PLAY [Database server] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : prometheus-mysqld-exporter user configuration] *******************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : prometheus-mysqld-exporter args] *********************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : Install required packages] ***************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : MySQL exporter user] *********************************************
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-2]

TASK [mysql : Ensure MySQL services are started] *******************************
ok: [AlessandroTambellini-2] => (item=mysql)
ok: [AlessandroTambellini-1] => (item=mysql)
ok: [AlessandroTambellini-2] => (item=prometheus-mysqld-exporter)
ok: [AlessandroTambellini-1] => (item=prometheus-mysqld-exporter)

TASK [mysql : Create agama database] *******************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : MySQL agama user] ************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : MySQL configuration] *********************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : create backup dir for mysql] *************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : backup user] *****************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : Client config] ***************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : Cron config] *****************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : MySQL replication user] ******************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [mysql : set read-only mode to db] ****************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for mysql-1 server] ************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

PLAY [Docker servers] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-3]

TASK [docker : Install python3-docker and docker.io] ***************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-3]

TASK [docker : Ensure service is running] **************************************
ok: [AlessandroTambellini-3]
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-2]

PLAY [agama servers] ***********************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [agama : Create dir] ******************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [agama : Download agama and Dockerfile] ***********************************
ok: [AlessandroTambellini-2] => (item=https://raw.githubusercontent.com/hudolejev/agama/master/agama.py)
ok: [AlessandroTambellini-1] => (item=https://raw.githubusercontent.com/hudolejev/agama/master/agama.py)
ok: [AlessandroTambellini-2] => (item=https://raw.githubusercontent.com/hudolejev/agama/master/Dockerfile)
ok: [AlessandroTambellini-1] => (item=https://raw.githubusercontent.com/hudolejev/agama/master/Dockerfile)

TASK [agama : Build image] *****************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [agama : agama containers] ************************************************
ok: [AlessandroTambellini-2] => (item=None)
ok: [AlessandroTambellini-1] => (item=None)
ok: [AlessandroTambellini-2] => (item=None)
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1] => (item=None)
ok: [AlessandroTambellini-1]

TASK [agama : Get number of containers] ****************************************
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-2]

TASK [agama : Delete unused containers] ****************************************
ok: [AlessandroTambellini-2] => (item=3)
ok: [AlessandroTambellini-1] => (item=3)
ok: [AlessandroTambellini-2] => (item=4)
ok: [AlessandroTambellini-1] => (item=4)
ok: [AlessandroTambellini-2] => (item=5)
ok: [AlessandroTambellini-1] => (item=5)

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for www-1 server] **************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

PLAY [haproxy] *****************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [haproxy : Install haproxy and prometheus-haproxy-exporter] ***************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [haproxy : HAProxy config] ************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [haproxy : HAProxy exporter config] ***************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [haproxy : Ensure services are running] ***********************************
ok: [AlessandroTambellini-2] => (item=haproxy)
ok: [AlessandroTambellini-1] => (item=haproxy)
ok: [AlessandroTambellini-2] => (item=prometheus-haproxy-exporter)
ok: [AlessandroTambellini-1] => (item=prometheus-haproxy-exporter)

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for lb-1 server] ***************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

PLAY [keepalived] **************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [keepalived : Install keepalived] *****************************************
ok: [AlessandroTambellini-1]
ok: [AlessandroTambellini-2]

TASK [keepalived : Create user 'keepalived_script'] ****************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [keepalived : Create dir 'keepalived_script'] *****************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [keepalived : haproxy script] *********************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [keepalived : Keepalived config] ******************************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [keepalived : Download keepalived-exporter] *******************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [keepalived : Unarchive keepalived-exporter] ******************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [keepalived : Move keepalived-exporter executable] ************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [keepalived : keepalived-exporter config] *********************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [keepalived : Ensure keepalived is running] *******************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [keepalived : Ensure keepalived-exporter service is running] **************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for ka-1 server] ***************************
ok: [AlessandroTambellini-2]
ok: [AlessandroTambellini-1]

PLAY [InfluxDB] ****************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Install prerequisite packages] ********************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Download InfluxDB] ********************************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Install InfluxDB] *********************************************
ok: [AlessandroTambellini-3]

TASK [influxdb : InfluxDB config] **********************************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Add GPG key] **************************************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Add stable repository] ****************************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Install telegraf] *********************************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Telegraf config] **********************************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Ensure InfluxDB and Telegram are running] *********************
ok: [AlessandroTambellini-3] => (item=influxdb)
ok: [AlessandroTambellini-3] => (item=telegraf)

TASK [influxdb : Download Influxdb stats Exporter] *****************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Exporter service config] **************************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Ensure prometheus-influxdb-stats-exporter is running] *********
ok: [AlessandroTambellini-3]

TASK [influxdb : create backup dir for influxdb] *******************************
ok: [AlessandroTambellini-3]

TASK [influxdb : Cron config] **************************************************
ok: [AlessandroTambellini-3]

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for influxdb server] ***********************
ok: [AlessandroTambellini-3]

PLAY [pinger] ******************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-3]

TASK [pinger : Install prerequisite pkgs] **************************************
ok: [AlessandroTambellini-3]

TASK [pinger : Add the user 'pinger'] ******************************************
ok: [AlessandroTambellini-3]

TASK [pinger : Create pinger dir] **********************************************
ok: [AlessandroTambellini-3]

TASK [pinger : pinger config] **************************************************
ok: [AlessandroTambellini-3]

TASK [pinger : pinger script] **************************************************
ok: [AlessandroTambellini-3]

TASK [pinger : ping service config] ********************************************
ok: [AlessandroTambellini-3]

TASK [pinger : Ensure pinger is running] ***************************************
ok: [AlessandroTambellini-3]

PLAY [Prometheus server] *******************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-3]

TASK [prometheus : Install Prometheus] *****************************************
ok: [AlessandroTambellini-3]

TASK [prometheus : Prometheus args] ********************************************
ok: [AlessandroTambellini-3]

TASK [prometheus : Configure Prometheus] ***************************************
ok: [AlessandroTambellini-3]

TASK [prometheus : Ensure Prometheus service is started] ***********************
ok: [AlessandroTambellini-3]

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for prometheus server] *********************
ok: [AlessandroTambellini-3]

PLAY [Grafana server] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-3]

TASK [grafana : Grafana directory] *********************************************
ok: [AlessandroTambellini-3] => (item=dashboards)
ok: [AlessandroTambellini-3] => (item=datasources)

TASK [grafana : Grafana configuration] *****************************************
ok: [AlessandroTambellini-3]

TASK [grafana : Add datasources] ***********************************************
ok: [AlessandroTambellini-3]

TASK [grafana : dashboards files] **********************************************
ok: [AlessandroTambellini-3] => (item=datasources.conf.yaml)
ok: [AlessandroTambellini-3] => (item=main.json)
ok: [AlessandroTambellini-3] => (item=mysql.json)
ok: [AlessandroTambellini-3] => (item=syslog.json)

TASK [grafana : Grafana Docker container] **************************************
ok: [AlessandroTambellini-3]

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for grafana server] ************************
ok: [AlessandroTambellini-3]

PLAY [nginx server] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [AlessandroTambellini-3]

TASK [nginx : Install nginx and prometheus-nginx-exporter] *********************
ok: [AlessandroTambellini-3]

TASK [nginx : nginx configuration] *********************************************
ok: [AlessandroTambellini-3]

TASK [nginx : meta] ************************************************************

TASK [nginx : Ensure services are started] *************************************
ok: [AlessandroTambellini-3] => (item=nginx)
ok: [AlessandroTambellini-3] => (item=prometheus-nginx-exporter)

TASK [include_role : dns_record] ***********************************************

TASK [dns_record : Set CNAME record for nginx-3 server] ************************
ok: [AlessandroTambellini-3]

PLAY RECAP *********************************************************************
AlessandroTambellini-1     : ok=64   changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
AlessandroTambellini-2     : ok=64   changed=0    unreachable=0    failed=0    skipped=3    rescued=0    ignored=0   
AlessandroTambellini-3     : ok=66   changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

+ date
Wed Jan 17 01:16:33 PM CET 2024
